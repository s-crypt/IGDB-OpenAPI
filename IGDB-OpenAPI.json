{
  "openapi": "3.0.0",
  "info": {
    "title": "IGDB API",
    "version": "4.0.0",
    "contact": {
      "name": "IGDB Support",
      "url": "https://www.igdb.com/contact",
      "email": "support@igdb.com"
    },
    "license": {
      "url": "https://www.twitch.tv/p/legal/developer-agreement/",
      "name": "Twitch Developer Services Agreement"
    },
    "description": "This OpenAPI documentation and schema project IS IN BETA and maintained by [s-crypt.](https://github.com/s-crypt)\n\nThe source code and more information is [available in the GitHub repository](https://github.com/s-crypt/IGDB-OpenAPI)\n\nIssues and pull requests are welcome! Please report any bugs or discrepancies you come across!\n",
    "termsOfService": "https://www.twitch.tv/p/en/legal/terms-of-service/"
  },
  "externalDocs": {
    "url": "https://api-docs.igdb.com"
  },
  "servers": [
    {
      "url": "https://api.igdb.com/v4",
      "description": "The main base URL for the IGDB API"
    }
  ],
  "paths": {
    "/age_ratings": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Age Rating according to various rating organizations",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,content_descriptions,rating,rating_cover_url,synopsis;"
            }
          }
        },
        "operationId": "RetrieveAgeRating",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRating"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/?shell#age-rating"
        }
      }
    },
    "/age_rating_content_descriptions": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Age Rating Descriptors",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,description;"
            }
          }
        },
        "operationId": "RetrieveAgeRatingContentDescription",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgeRatingContentDescription"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#age-rating-content-description"
        }
      }
    },
    "/alternative_names": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Alternative and international game titles",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,comment,game,name;"
            }
          }
        },
        "operationId": "RetrieveAlternativeNames",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlternativeNames"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#alternative-name"
        }
      }
    },
    "/artworks": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Official artworks (resolution and aspect ratio may vary)",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,game,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveArtwork",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artwork"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#artwork"
        }
      }
    },
    "/characters": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Video game characters",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields akas,checksum,country_name,created_at,description,games,gender,mug_shot,name,slug,species,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveCharacter",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Character"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#character"
        }
      }
    },
    "/character_mug_shots": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Images depicting game characters",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveCharacterMugShot",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CharacterMugShot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#character-mug-shot"
        }
      }
    },
    "/collections": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Collection, AKA Series",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields as_child_relations,as_parent_relations,checksum,created_at,games,name,slug,type,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveCollection",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection"
        }
      }
    },
    "/collection_memberships": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "The Collection Memberships.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,collection,created_at,game,type,updated_at;"
            }
          }
        },
        "operationId": "RetreiveCollectionMembership",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionMembership"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection-membership"
        }
      }
    },
    "/collection_membership_types": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Enums for collection membership types.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,collection,created_at,game,type,updated_at;"
            }
          }
        },
        "operationId": "RetreiveCollectionMembershipType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionMembershipType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection-membership-type"
        }
      }
    },
    "/collection_relations": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Describes Relationship between Collections.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,child_collection,created_at,parent_collection,type,updated_at;"
            }
          }
        },
        "operationId": "RetreiveCollectionRelation",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionRelation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection-relation"
        }
      }
    },
    "/collection_relation_types": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Collection Relation Types",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields allowed_child_type,allowed_parent_type,checksum,created_at,description,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveCollectionRelationType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionRelationType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection-relation-type"
        }
      }
    },
    "/collection_types": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Enums for collection types.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,description,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveCollectionType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#collection-type"
        }
      }
    },
    "/companies": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Video game companies. Both publishers & developers",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields change_date,change_date_category,changed_company_id,checksum,country,created_at,description,developed,logo,name,parent,published,slug,start_date,start_date_category,updated_at,url,websites;"
            }
          }
        },
        "operationId": "RetreiveCompany",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#company"
        }
      }
    },
    "/company_logos": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "The logos of developers and publishers",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveCompanyLogo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyLogo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#company-logo"
        }
      }
    },
    "/company_websites": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Company Websites",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,trusted,url;"
            }
          }
        },
        "operationId": "RetreiveCompanyWebsite",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyWebsite"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#company-website"
        }
      }
    },
    "/covers": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "The cover art of games",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,game,game_localization,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveCover",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cover"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#cover"
        }
      }
    },
    "/events": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Gaming event like GamesCom, Tokyo Game Show, PAX or GSL",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,description,end_time,event_logo,event_networks,games,live_stream_url,name,slug,start_time,time_zone,updated_at,videos;"
            }
          }
        },
        "operationId": "RetreiveEvents",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#event"
        }
      }
    },
    "/event_logos": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Logo for the event",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,created_at,event,height,image_id,updated_at,url,width;"
            }
          }
        },
        "operationId": "RetreiveEventLogo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventLogo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#event-logo"
        }
      }
    },
    "/event_networks": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Urls related to the event like twitter, facebook and youtube",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,event,network_type,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveEventNetwork",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventNetwork"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#event-network"
        }
      }
    },
    "/franchises": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "A list of video game franchises such as Star Wars.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,games,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveFranchise",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Franchise"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#franchise"
        }
      }
    },
    "/games": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Video Games!",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields age_ratings,aggregated_rating,aggregated_rating_count,alternative_names,artworks,bundles,category,checksum,collection,collections,cover,created_at,dlcs,expanded_games,expansions,external_games,first_release_date,follows,forks,franchise,franchises,game_engines,game_localizations,game_modes,genres,hypes,involved_companies,keywords,language_supports,multiplayer_modes,name,parent_game,platforms,player_perspectives,ports,rating,rating_count,release_dates,remakes,remasters,screenshots,similar_games,slug,standalone_expansions,status,storyline,summary,tags,themes,total_rating,total_rating_count,updated_at,url,version_parent,version_title,videos,websites;"
            }
          }
        },
        "operationId": "RetreiveGames",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Games"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game"
        }
      }
    },
    "/game_engines": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Video game engines such as unreal engine.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,companies,created_at,description,logo,name,platforms,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveGameEngine",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameEngine"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-engine"
        }
      }
    },
    "/game_engine_logos": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "The logos of game engines",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveGameEngineLogo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameEngineLogo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-engine-logo"
        }
      }
    },
    "/external_games": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Game IDs on other services",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,countries,created_at,game,media,name,platform,uid,updated_at,url,year;"
            }
          }
        },
        "operationId": "RetreiveExternalGame",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalGame"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#external-game"
        }
      }
    },
    "/game_versions": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Details about game editions and versions.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,features,game,games,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveGameVersion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameVersion"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-version"
        }
      }
    },
    "/game_modes": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Single player, Multiplayer etc",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveGameMode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameMode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-mode"
        }
      }
    },
    "/game_version_features": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Features and descriptions of what makes each version/edition different from the main game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,description,position,title,values;"
            }
          }
        },
        "operationId": "RetreiveVersionFeatures",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameVersionFeatures"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-version-feature"
        }
      }
    },
    "/game_version_feature_values": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "The bool/text value of the feature",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,game,game_feature,included_feature,note;"
            }
          }
        },
        "operationId": "RetreiveVersionFeatureValue",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameVersionFeatureValue"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-version-feature-value"
        }
      }
    },
    "/genres": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Genres of video game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveGenre",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Genre"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#genre"
        }
      }
    },
    "/involved_companies": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Companies involved with the game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,company,created_at,developer,game,porting,publisher,supporting,updated_at;"
            }
          }
        },
        "operationId": "RetreiveInvolvedCompany",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvolvedCompany"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#involved-company"
        }
      }
    },
    "/game_videos": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "A video associated with a game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,game,name,video_id;"
            }
          }
        },
        "operationId": "RetreiveGameVideo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameVideo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-video"
        }
      }
    },
    "/keywords": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Keywords are words or phrases that get tagged to a game such as “world war 2” or “steampunk”.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveKeyword",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Keyword"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#keyword"
        }
      }
    },
    "/languages": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Languages that are used in the Language Support endpoint.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,locale,name,native_name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveLanguage",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Language"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#language"
        }
      }
    },
    "/game_localizations": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Game localization for a game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,cover,created_at,game,name,region,updated_at;"
            }
          }
        },
        "operationId": "RetreiveGameLocalization",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameLocalization"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#game-localization"
        }
      }
    },
    "/language_support_types": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Language Support Types contains the identifiers for the support types that Language Support uses.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveLanguageSupportType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageSupportType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#language-support-type"
        }
      }
    },
    "/multiplayer_modes": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Data about the supported multiplayer types",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields campaigncoop,checksum,dropin,game,lancoop,offlinecoop,offlinecoopmax,offlinemax,onlinecoop,onlinecoopmax,onlinemax,platform,splitscreen,splitscreenonline;"
            }
          }
        },
        "operationId": "RetreiveMultiplayerMode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiplayerMode"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#multiplayer-mode"
        }
      }
    },
    "/language_supports": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Games can be played with different languages for voice acting, subtitles, or the interface language.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,game,language,language_support_type,updated_at;"
            }
          }
        },
        "operationId": "RetreiveLanguageSupport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageSupport"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#language-support"
        }
      }
    },
    "/network_types": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Social networks related to the event like twitter, facebook and youtube",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,event_networks,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveNetworkType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkType"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#network-type"
        }
      }
    },
    "/platform_families": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "A collection of closely related platforms",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,name,slug;"
            }
          }
        },
        "operationId": "RetreivePlatformFamily",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformFamily"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-family"
        }
      }
    },
    "/platform_logos": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Logo for a platform",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreivePlatformLogo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformLogo"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-logo"
        }
      }
    },
    "/platform_versions": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "The platform's version",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,companies,connectivity,cpu,graphics,main_manufacturer,media,memory,name,online,os,output,platform_logo,platform_version_release_dates,resolutions,slug,sound,storage,summary,url;"
            }
          }
        },
        "operationId": "RetreivePlatformVersion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformVersion"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-version"
        }
      }
    },
    "/platform_version_companies": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "A platform developer",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,comment,company,developer,manufacturer;"
            }
          }
        },
        "operationId": "RetreivePlatformVersionCompany",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformVersionCompany"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-version-company"
        }
      }
    },
    "/platforms": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "The hardware used to run the game or game delivery network",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields abbreviation,alternative_name,category,checksum,created_at,generation,name,platform_family,platform_logo,slug,summary,updated_at,url,versions,websites;"
            }
          }
        },
        "operationId": "RetreivePlatform",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Platform"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform"
        }
      }
    },
    "/platform_version_release_dates": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,created_at,date,human,m,platform_version,region,updated_at,y;"
            }
          }
        },
        "operationId": "RetreivePlatformVersionReleaseDate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformVersionReleaseDate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-version-release-date"
        }
      }
    },
    "/platform_websites": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "The main website for the platform",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,trusted,url;"
            }
          }
        },
        "operationId": "RetreivePlatformWebsite",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformWebsite"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#platform-website"
        }
      }
    },
    "/player_perspectives": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Player perspectives describe the view/perspective of the player in a video game.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreivePlayerPerspective",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlayerPerspective"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#player-perspective"
        }
      }
    },
    "/popularity_primatives": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "This endpoint lists available primitives with their source and popularity type.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields calculated_at,checksum,created_at,game_id,popularity_source,popularity_type,updated_at,value;"
            }
          }
        },
        "operationId": "RetreivePopularityPrimatives",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PopularityPrimatives"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#popularity-primitive"
        }
      }
    },
    "/popularity_types": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "This describes what type of popularity primitive or popularity indicator the popularity value is.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,popularity_source,updated_at;"
            }
          }
        },
        "operationId": "RetreivePopularityType",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PopularityTypes"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#popularity-type"
        }
      }
    },
    "/regions": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Region for game localization",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,created_at,identifier,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveRegion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#region"
        }
      }
    },
    "/release_dates": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "A handy endpoint that extends game release dates. Used to dig deeper into release dates, platforms and versions.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,created_at,date,game,human,m,platform,region,status,updated_at,y;"
            }
          }
        },
        "operationId": "RetreiveReleaseDate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseDate"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#release-date"
        }
      }
    },
    "/release_date_statuses": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "An endpoint to provide definition of all of the current release date statuses.",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,description,name,updated_at;"
            }
          }
        },
        "operationId": "RetreiveReleaseDateStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReleaseDateStatus"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#release-date-status"
        }
      }
    },
    "/screenshots": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Screenshots of games",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alpha_channel,animated,checksum,game,height,image_id,url,width;"
            }
          }
        },
        "operationId": "RetreiveScreenshot",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Screenshot"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#screenshot"
        }
      }
    },
    "/search": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Search IGDB!",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields alternative_name,character,checksum,collection,company,description,game,name,platform,published_at,test_dummy,theme; search \"zelda\";"
            }
          }
        },
        "operationId": "RetreiveSearch",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Search"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#search"
        }
      }
    },
    "/themes": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "Video game themes",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields checksum,created_at,name,slug,updated_at,url;"
            }
          }
        },
        "operationId": "RetreiveTheme",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Theme"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#theme"
        }
      }
    },
    "/websites": {
      "post": {
        "security": [
          {
            "TwitchOAuth": [],
            "Client-ID": []
          }
        ],
        "summary": "A website url, usually associated with a game",
        "tags": [
          "Endpoints"
        ],
        "parameters": [],
        "requestBody": {
          "required": false,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              },
              "example": "fields category,checksum,game,trusted,url;"
            }
          }
        },
        "operationId": "RetreiveWebsite",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Website"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/AuthFailure"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "externalDocs": {
          "description": "Official documentation:",
          "url": "https://api-docs.igdb.com/#website"
        }
      }
    }
  },
  "components": {
    "responses": {
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Authorization Failure",
              "properties": {
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "number"
                },
                "cause": {
                  "type": "string"
                }
              },
              "example": {
                "title": "Invalid Field",
                "status": 400,
                "example": "Invalid field name: 'checksums'"
              }
            }
          }
        }
      },
      "AuthFailure": {
        "description": "Authorization Failure",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Authorization Failure",
              "properties": {
                "message": {
                  "type": "string"
                },
                "Tip 1": {
                  "type": "string"
                },
                "Tip 2": {
                  "type": "string"
                },
                "Tip 3": {
                  "type": "string"
                },
                "Docs": {
                  "type": "string",
                  "format": "url"
                },
                "Discord": {
                  "type": "string",
                  "format": "url"
                }
              },
              "example": {
                "message": "Authorization Failure. Have you tried:",
                "Tip 1": "Ensure you are sending Authorization and Client-ID as headers.",
                "Tip 2": "Ensure Authorization value starts with 'Bearer ', including the space",
                "Tip 3": "Ensure Authorization value ends with the App Access Token you generated, NOT your Client Secret.",
                "Docs": "https://api-docs.igdb.com/#authentication",
                "Discord": "https://discord.gg/FrvfwQg"
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Forbidden",
              "properties": {
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "number"
                },
                "cause": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                }
              },
              "example": {
                "title": "Forbidden",
                "status": 403,
                "cause": "Reqest limit too high",
                "details": "You typed in 2500 but your maximum is 500"
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Not Found",
              "properties": {
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "number"
                },
                "type": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                }
              },
              "example": {
                "title": "Not Found",
                "status": 404,
                "type": "https://javalin.io/documentation#notfoundresponse",
                "details": {}
              }
            }
          }
        }
      }
    },
    "schemas": {
      "AgeRating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/AgeRatingCategoryEnums"
          },
          "content_descriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeRatingContentDescription/properties/id"
            },
            "description": "Array of Age Rating Content Description IDs"
          },
          "rating": {
            "$ref": "#/components/schemas/AgeRatingEnums"
          },
          "rating_cover_url": {
            "type": "string",
            "description": "The url for the image of an age rating"
          },
          "synopsis": {
            "type": "string",
            "description": "A free text motivating a rating"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "AgeRatingCategoryEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "x-enum-varnames": [
          "ESRB",
          "PEGI",
          "CERO",
          "USK",
          "GRAC",
          "CLASS_IND",
          "ACB"
        ],
        "x-enum-descriptions": [
          "ESRB",
          "PEGI",
          "CERO",
          "USK",
          "GRAC",
          "CLASS_IND",
          "ACB"
        ],
        "description": "The organization that has issued a specific rating  \n1: ESRB  \n2: PEGI  \n3: CERO  \n4: USK  \n5: GRAC  \n6: CLASS_IND  \n7: ACB  \n"
      },
      "AgeRatingEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39
        ],
        "x-enum-varnames": [
          "Three",
          "Seven",
          "Twelve",
          "Sixteen",
          "Eighteen",
          "RP",
          "EC",
          "E",
          "E10",
          "T",
          "M",
          "AO",
          "CERO_A",
          "CERO_B",
          "CERO_C",
          "CERO_D",
          "CERO_Z",
          "USK_0",
          "USK_6",
          "USK_12",
          "USK_16",
          "USK_18",
          "GRAC_ALL",
          "GRAC_Twelve",
          "GRAC_Fifteen",
          "GRAC_Eighteen",
          "GRAC_TESTING",
          "CLASS_IND_L",
          "CLASS_IND_Ten",
          "CLASS_IND_Twelve",
          "CLASS_IND_Fourteen",
          "CLASS_IND_Sixteen",
          "CLASS_IND_Eighteen",
          "ACB_G",
          "ACB_PG",
          "ACB_M",
          "ACB_MA15",
          "ACB_R18",
          "ACB_RC"
        ],
        "x-enum-descriptions": [
          "Three",
          "Seven",
          "Twelve",
          "Sixteen",
          "Eighteen",
          "RP",
          "EC",
          "E",
          "E10",
          "T",
          "M",
          "AO",
          "CERO_A",
          "CERO_B",
          "CERO_C",
          "CERO_D",
          "CERO_Z",
          "USK_0",
          "USK_6",
          "USK_12",
          "USK_16",
          "USK_18",
          "GRAC_ALL",
          "GRAC_Twelve",
          "GRAC_Fifteen",
          "GRAC_Eighteen",
          "GRAC_TESTING",
          "CLASS_IND_L",
          "CLASS_IND_Ten",
          "CLASS_IND_Twelve",
          "CLASS_IND_Fourteen",
          "CLASS_IND_Sixteen",
          "CLASS_IND_Eighteen",
          "ACB_G",
          "ACB_PG",
          "ACB_M",
          "ACB_MA15",
          "ACB_R18",
          "ACB_RC"
        ],
        "description": "The age rating assigned by the organization  \n1: Three  \n2: Seven  \n3: Twelve  \n4: Sixteen  \n5: Eighteen  \n6: RP  \n7: EC  \n8: E  \n9: E10  \n10: T  \n11: M  \n12: AO  \n13: CERO_A  \n14: CERO_B  \n15: CERO_C  \n16: CERO_D  \n17: CERO_Z  \n18: USK_0  \n19: USK_6  \n20: USK_12  \n21: USK_16  \n22: USK_18  \n23: GRAC_ALL  \n24: GRAC_Twelve  \n25: GRAC_Fifteen  \n26: GRAC_Eighteen  \n27: GRAC_TESTING  \n28: CLASS_IND_L  \n29: CLASS_IND_Ten  \n30: CLASS_IND_Twelve  \n31: CLASS_IND_Fourteen  \n32: CLASS_IND_Sixteen  \n33: CLASS_IND_Eighteen  \n34: ACB_G  \n35: ACB_PG  \n36: ACB_M  \n37: ACB_MA15  \n38: ACB_R18  \n39: ACB_RC  \n"
      },
      "AgeRatingContentDescription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/AgeRatingContentDescriptionCategoryEnums"
          },
          "description": {
            "type": "string",
            "description": "A string containing the age rating content descriptions"
          },
          "checksum": {
            "type": "string",
            "description": "Hash of the object"
          }
        }
      },
      "AgeRatingContentDescriptionCategoryEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          82,
          83,
          84,
          85
        ],
        "x-enum-varnames": [
          "ESRB_alcohol_reference",
          "ESRB_animated_blood",
          "ESRB_blood",
          "ESRB_blood_and_gore",
          "ESRB_cartoon_violence",
          "ESRB_comic_mischief",
          "ESRB_crude_humor",
          "ESRB_drug_reference",
          "ESRB_fantasy_violence",
          "ESRB_intense_violence",
          "ESRB_language",
          "ESRB_lyrics",
          "ESRB_mature_humor",
          "ESRB_nudity",
          "ESRB_partial_nudity",
          "ESRB_real_gambling",
          "ESRB_sexual_content",
          "ESRB_sexual_themes",
          "ESRB_sexual_violence",
          "ESRB_simulated_gambling",
          "ESRB_strong_language",
          "ESRB_strong_lyrics",
          "ESRB_strong_sexual_content",
          "ESRB_suggestive_themes",
          "ESRB_tobacco_reference",
          "ESRB_use_of_alcohol",
          "ESRB_use_of_drugs",
          "ESRB_use_of_tobacco",
          "ESRB_violence",
          "ESRB_violent_references",
          "ESRB_animated_violence",
          "ESRB_mild_language",
          "ESRB_mild_violence",
          "ESRB_use_of_drugs_and_alcohol",
          "ESRB_drug_and_alcohol_reference",
          "ESRB_mild_suggestive_themes",
          "ESRB_mild_cartoon_violence",
          "ESRB_mild_blood",
          "ESRB_realistic_blood_and_gore",
          "ESRB_realistic_violence",
          "ESRB_alcohol_and_tobacco_reference",
          "ESRB_mature_sexual_themes",
          "ESRB_mild_animated_violence",
          "ESRB_mild_sexual_themes",
          "ESRB_use_of_alcohol_and_tobacco",
          "ESRB_animated_blood_and_gore",
          "ESRB_mild_fantasy violence",
          "ESRB_mild_lyrics",
          "ESRB_realistic_blood",
          "PEGI_violence",
          "PEGI_sex",
          "PEGI_drugs",
          "PEGI_fear",
          "PEGI_discrimination",
          "PEGI_bad_language",
          "PEGI_gambling",
          "PEGI_online_gameplay",
          "PEGI_in_game_purchases",
          "CERO_love",
          "CERO_sexual_content",
          "CERO_violence",
          "CERO_horror",
          "CERO_drinking_smoking",
          "CERO_gambling",
          "CERO_crime",
          "CERO_controlled_substances",
          "CERO_languages_and others",
          "GRAC_sexuality",
          "GRAC_violence",
          "GRAC_fear_horror_threatening",
          "GRAC_language",
          "GRAC_alcohol_tobacco_drug",
          "GRAC_crime_anti_social",
          "GRAC_gambling",
          "CLASS_IND_violencia",
          "CLASS_IND_violencia_extrema",
          "CLASS_IND_conteudo_sexual",
          "CLASS_IND_nudez",
          "CLASS_IND_sexo",
          "CLASS_IND_sexo_explicito",
          "CLASS_IND_drogas",
          "CLASS_IND_drogas_licitas",
          "CLASS_IND_drogas_ilicitas",
          "CLASS_IND_linguagem_impropria",
          "CLASS_IND_atos_criminosos"
        ],
        "x-enum-descriptions": [
          "ESRB_alcohol_reference",
          "ESRB_animated_blood",
          "ESRB_blood",
          "ESRB_blood_and_gore",
          "ESRB_cartoon_violence",
          "ESRB_comic_mischief",
          "ESRB_crude_humor",
          "ESRB_drug_reference",
          "ESRB_fantasy_violence",
          "ESRB_intense_violence",
          "ESRB_language",
          "ESRB_lyrics",
          "ESRB_mature_humor",
          "ESRB_nudity",
          "ESRB_partial_nudity",
          "ESRB_real_gambling",
          "ESRB_sexual_content",
          "ESRB_sexual_themes",
          "ESRB_sexual_violence",
          "ESRB_simulated_gambling",
          "ESRB_strong_language",
          "ESRB_strong_lyrics",
          "ESRB_strong_sexual_content",
          "ESRB_suggestive_themes",
          "ESRB_tobacco_reference",
          "ESRB_use_of_alcohol",
          "ESRB_use_of_drugs",
          "ESRB_use_of_tobacco",
          "ESRB_violence",
          "ESRB_violent_references",
          "ESRB_animated_violence",
          "ESRB_mild_language",
          "ESRB_mild_violence",
          "ESRB_use_of_drugs_and_alcohol",
          "ESRB_drug_and_alcohol_reference",
          "ESRB_mild_suggestive_themes",
          "ESRB_mild_cartoon_violence",
          "ESRB_mild_blood",
          "ESRB_realistic_blood_and_gore",
          "ESRB_realistic_violence",
          "ESRB_alcohol_and_tobacco_reference",
          "ESRB_mature_sexual_themes",
          "ESRB_mild_animated_violence",
          "ESRB_mild_sexual_themes",
          "ESRB_use_of_alcohol_and_tobacco",
          "ESRB_animated_blood_and_gore",
          "ESRB_mild_fantasy violence",
          "ESRB_mild_lyrics",
          "ESRB_realistic_blood",
          "PEGI_violence",
          "PEGI_sex",
          "PEGI_drugs",
          "PEGI_fear",
          "PEGI_discrimination",
          "PEGI_bad_language",
          "PEGI_gambling",
          "PEGI_online_gameplay",
          "PEGI_in_game_purchases",
          "CERO_love",
          "CERO_sexual_content",
          "CERO_violence",
          "CERO_horror",
          "CERO_drinking_smoking",
          "CERO_gambling",
          "CERO_crime",
          "CERO_controlled_substances",
          "CERO_languages_and others",
          "GRAC_sexuality",
          "GRAC_violence",
          "GRAC_fear_horror_threatening",
          "GRAC_language",
          "GRAC_alcohol_tobacco_drug",
          "GRAC_crime_anti_social",
          "GRAC_gambling",
          "CLASS_IND_violencia",
          "CLASS_IND_violencia_extrema",
          "CLASS_IND_conteudo_sexual",
          "CLASS_IND_nudez",
          "CLASS_IND_sexo",
          "CLASS_IND_sexo_explicito",
          "CLASS_IND_drogas",
          "CLASS_IND_drogas_licitas",
          "CLASS_IND_drogas_ilicitas",
          "CLASS_IND_linguagem_impropria",
          "CLASS_IND_atos_criminosos"
        ],
        "description": "The age rating content description enums  \n1: ESRB_alcohol_reference  \n2: ESRB_animated_blood  \n3: ESRB_blood  \n4: ESRB_blood_and gore  \n5: ESRB_cartoon_violence  \n6: ESRB_comic_mischief  \n7: ESRB_crude_humor  \n8: ESRB_drug_reference  \n9: ESRB_fantasy_violence  \n10: ESRB_intense_violence  \n11: ESRB_language  \n12: ESRB_lyrics  \n13: ESRB_mature_humor  \n14: ESRB_nudity  \n15: ESRB_partial_nudity  \n16: ESRB_real_gambling  \n17: ESRB_sexual_content  \n18: ESRB_sexual_themes  \n19: ESRB_sexual_violence  \n20: ESRB_simulated_gambling  \n21: ESRB_strong_language  \n22: ESRB_strong_lyrics  \n23: ESRB_strong_sexual content  \n24: ESRB_suggestive_themes  \n25: ESRB_tobacco_reference  \n26: ESRB_use_of alcohol  \n27: ESRB_use_of drugs  \n28: ESRB_use_of tobacco  \n29: ESRB_violence  \n30: ESRB_violent_references  \n31: ESRB_animated_violence  \n32: ESRB_mild_language  \n33: ESRB_mild_violence  \n34: ESRB_use_of drugs and alcohol  \n35: ESRB_drug_and alcohol reference  \n36: ESRB_mild_suggestive themes  \n37: ESRB_mild_cartoon violence  \n38: ESRB_mild_blood  \n39: ESRB_realistic_blood and gore  \n40: ESRB_realistic_violence  \n41: ESRB_alcohol_and tobacco reference  \n42: ESRB_mature_sexual themes  \n43: ESRB_mild_animated violence  \n44: ESRB_mild_sexual themes  \n45: ESRB_use_of alcohol and tobacco  \n46: ESRB_animated_blood and gore  \n47: ESRB_mild_fantasy violence  \n48: ESRB_mild_lyrics  \n49: ESRB_realistic_blood  \n50: PEGI_violence  \n51: PEGI_sex  \n52: PEGI_drugs  \n53: PEGI_fear  \n54: PEGI_discrimination  \n55: PEGI_bad_language  \n56: PEGI_gambling  \n57: PEGI_online_gameplay  \n58: PEGI_in_game_purchases  \n59: CERO_love  \n60: CERO_sexual_content  \n61: CERO_violence  \n62: CERO_horror  \n63: CERO_drinking_smoking  \n64: CERO_gambling  \n65: CERO_crime  \n66: CERO_controlled_substances  \n67: CERO_languages_and others  \n68: GRAC_sexuality  \n69: GRAC_violence  \n70: GRAC_fear_horror_threatening  \n71: GRAC_language  \n72: GRAC_alcohol_tobacco_drug  \n73: GRAC_crime_anti_social  \n74: GRAC_gambling  \n75: CLASS_IND_violencia  \n76: CLASS_IND_violencia_extrema  \n77: CLASS_IND_conteudo_sexual  \n78: CLASS_IND_nudez  \n79: CLASS_IND_sexo  \n80: CLASS_IND_sexo_explicito  \n81: CLASS_IND_drogas  \n82: CLASS_IND_drogas_licitas  \n83: CLASS_IND_drogas_ilicitas  \n84: CLASS_IND_linguagem_impropria  \n85: CLASS_IND_atos_criminosos  \n"
      },
      "AlternativeNames": {
        "type": "object",
        "description": "Alternative and international game titles",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "comment": {
            "type": "string",
            "description": "A description of what kind of alternative name it is. (Acronym, Working title, Japanese title etc)"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "name": {
            "type": "string",
            "description": "An alternative name"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Artwork": {
        "type": "object",
        "description": "Official artworks. Resolution and aspect ratio may vary",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Character": {
        "type": "object",
        "description": "Video game characters",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "akas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Alternative names for a character"
          },
          "country_name": {
            "type": "string",
            "description": "A Character's country of origin"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "description": {
            "type": "string",
            "description": "Text describing a character"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "gender": {
            "$ref": "#/components/schemas/CharacterGenderEnum"
          },
          "mug_shot": {
            "$ref": "#/components/schemas/CharacterMugShot/properties/id"
          },
          "name": {
            "type": "string",
            "description": "The character's name"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "species": {
            "$ref": "#/components/schemas/CharacterSpeciesEnum"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CharacterGenderEnum": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-varnames": [
          "Male",
          "Female",
          "Other"
        ],
        "x-enum-descriptions": [
          "male",
          "female",
          "other"
        ],
        "description": "An Enum of the character's gender  \n0: Male  \n1: Female  \n2: Other  \n"
      },
      "CharacterSpeciesEnum": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3
        ],
        "x-enum-varnames": [
          "Human",
          "Alien",
          "Animal"
        ],
        "x-enum-descriptions": [
          "human",
          "alien",
          "animal"
        ],
        "description": "An enum of the Character's species  \n1: Human  \n2: Alien  \n3: Animal  \n"
      },
      "CharacterMugShot": {
        "type": "object",
        "description": "Images depicting game characters",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Collection": {
        "type": "object",
        "description": "Collection, AKA Series",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "as_child_relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionRelation/properties/id"
            }
          },
          "as_parent_relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionRelation/properties/id"
            }
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "name": {
            "type": "string",
            "description": "Umbrella term for a collection of games"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "type": {
            "$ref": "#/components/schemas/CollectionType/properties/id"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CollectionMembership": {
        "type": "object",
        "description": "The collection memberships",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "collection": {
            "type": "string",
            "description": "Reference ID for Collection"
          },
          "type": {
            "$ref": "#/components/schemas/CollectionMembershipType/properties/id"
          },
          "updated_at": {
            "type": "number",
            "format": "url",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CollectionMembershipType": {
        "type": "object",
        "description": "Enums for collection membership type",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "allowed_collection_type": {
            "$ref": "#/components/schemas/CollectionType/properties/id"
          },
          "checksum": {
            "type": "string",
            "description": "Hash of the object"
          },
          "created_at": {
            "type": "number",
            "description": "Date this was initally added to the IGDB database"
          },
          "description": {
            "type": "string",
            "description": "Description of the membership type"
          },
          "name": {
            "type": "string",
            "description": "The membership type name"
          },
          "updated_at": {
            "type": "number",
            "description": "The last date this entry was updated in the IGDB database"
          }
        }
      },
      "CollectionRelation": {
        "type": "object",
        "description": "Describes relationship between collections",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "child_collection": {
            "$ref": "#/components/schemas/Collection/properties/id"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "parent_collection": {
            "$ref": "#/components/schemas/Collection/properties/id"
          },
          "type": {
            "$ref": "#/components/schemas/CollectionRelationType/properties/id"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CollectionRelationType": {
        "type": "object",
        "description": "Enums for collection membership type",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The membership type name"
          },
          "description": {
            "type": "string",
            "description": "Description of the membership type"
          },
          "allowed_child_type": {
            "$ref": "#/components/schemas/CollectionType/properties/id"
          },
          "allowed_parent_type": {
            "$ref": "#/components/schemas/CollectionType/properties/id"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CollectionType": {
        "type": "object",
        "description": "Enums for collection membership type",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The membership type name"
          },
          "description": {
            "type": "string",
            "description": "Description of the membership type"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Company": {
        "type": "object",
        "description": "Video game companies, both publishers and developers",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "change_date_category": {
            "$ref": "#/components/schemas/ChangeDateCategoryEnum"
          },
          "change_date": {
            "type": "number",
            "format": "timestamp",
            "description": "The date when a compnay got a new ID"
          },
          "changed_company_id": {
            "type": "string",
            "description": "The new ID for a company that has gone through a merger or restructuring"
          },
          "country": {
            "type": "integer",
            "format": "int32",
            "description": "ISO 3166-1 numeric country code"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "description": {
            "type": "string",
            "description": "A free text description of the company"
          },
          "developed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "logo": {
            "$ref": "#/components/schemas/CompanyLogo/properties/id"
          },
          "name": {
            "type": "string",
            "description": "The name of the company"
          },
          "parent": {
            "$ref": "#/components/schemas/Company/properties/id"
          },
          "published": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "start_date": {
            "type": "number",
            "format": "timestamp",
            "description": "The date that the company was founded"
          },
          "start_date_category": {
            "$ref": "#/components/schemas/StartDateCategoryEnum"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "websites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyWebsite/properties/id"
            }
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "ChangeDateCategoryEnum": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "x-enum-varnames": [
          "YYYYMMMMDD",
          "YYYYMMMM",
          "YYYY",
          "YYYYQ1",
          "YYYYQ2",
          "YYYYQ3",
          "YYYYQ4",
          "TBD"
        ],
        "x-enum-descriptions": [
          "YYYYMMMMDD",
          "YYYYMMMM",
          "YYYY",
          "YYYYQ1",
          "YYYYQ2",
          "YYYYQ3",
          "YYYYQ4",
          "TBD"
        ],
        "description": "An enum of the date format  \n0: YYYYMMMMDD  \n1: YYYYMMMM  \n2: YYYY  \n3: YYYYQ1  \n4: YYYYQ2  \n5: YYYYQ3  \n6: YYYYQ4  \n7: TBD  \n"
      },
      "StartDateCategoryEnum": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "x-enum-varnames": [
          "YYYYMMMMDD",
          "YYYYMMMM",
          "YYYY",
          "YYYYQ1",
          "YYYYQ2",
          "YYYYQ3",
          "YYYYQ4",
          "TBD"
        ],
        "x-enum-descriptions": [
          "YYYYMMMMDD",
          "YYYYMMMM",
          "YYYY",
          "YYYYQ1",
          "YYYYQ2",
          "YYYYQ3",
          "YYYYQ4",
          "TBD"
        ],
        "description": "An enum of the date format  \n0: YYYYMMMMDD  \n1: YYYYMMMM  \n2: YYYY  \n3: YYYYQ1  \n4: YYYYQ2  \n5: YYYYQ3  \n6: YYYYQ4  \n7: TBD  \n"
      },
      "CompanyLogo": {
        "type": "object",
        "description": "The logos of developers and publishers",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CompanyWebsite": {
        "type": "object",
        "description": "A company's website links",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/CompanyWebsiteEnums"
          },
          "trusted": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "CompanyWebsiteEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18
        ],
        "x-enum-varnames": [
          "official",
          "wikia",
          "wikipedia",
          "facebook",
          "twitter",
          "twitch",
          "instagram",
          "youtube",
          "iphone",
          "ipad",
          "android",
          "steam",
          "reddit",
          "itch",
          "epicgames",
          "gog",
          "discord"
        ],
        "x-enum-descriptions": [
          "official",
          "wikia",
          "wikipedia",
          "facebook",
          "twitter",
          "twitch",
          "instagram",
          "youtube",
          "iphone",
          "ipad",
          "android",
          "steam",
          "reddit",
          "itch",
          "epicgames",
          "gog",
          "discord"
        ],
        "description": "An enum of the date format  \n1: official  \n2: wikia  \n3: wikipedia  \n4: facebook  \n5: twitter  \n6: twitch  \n8: instagram  \n9: youtube  \n10: iphone  \n11: ipad  \n12: android  \n13: steam  \n14: reddit  \n15: itch  \n16: epicgames  \n17: gog  \n18: discord  \n"
      },
      "Cover": {
        "type": "object",
        "description": "The cover art of games",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id",
            "description": "The game this cover is associated with. If it is empty then this cover belongs to a game_localization, which can be found under game_localization field"
          },
          "game_localization": {
            "type": "string",
            "description": "Reference ID for Game Localization this cover might be associated with"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Event": {
        "type": "object",
        "description": "Gaming events like GamesCom, Tokyo Game Show, PAX, or GSL",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the event"
          },
          "description": {
            "type": "string",
            "description": "The description of the event"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "event_logo": {
            "$ref": "#/components/schemas/EventLogo/properties/id"
          },
          "start_time": {
            "type": "number",
            "format": "timestamp",
            "description": "Start time of the event in UTC"
          },
          "end_time": {
            "type": "number",
            "format": "timestamp",
            "description": "End time of the event in UTC"
          },
          "time_zone": {
            "type": "string",
            "description": "Timezone the event is in."
          },
          "live_stream_url": {
            "type": "string",
            "format": "url",
            "description": "URL to the livestream of the event."
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameVideo/properties/id"
            }
          },
          "event_networks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventNetwork/properties/id"
            }
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "EventLogo": {
        "type": "object",
        "description": "Logo for the event",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "event": {
            "$ref": "#/components/schemas/Event/properties/id"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "EventNetwork": {
        "type": "object",
        "description": "URLs related to the event like Twitter, Facebook, and Youtube",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "event": {
            "$ref": "#/components/schemas/Event/properties/id"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "network_type": {
            "$ref": "#/components/schemas/NetworkType/properties/id"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Franchise": {
        "type": "object",
        "description": "A list of video game franchises such as Star Wars",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the franchise"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Games": {
        "type": "object",
        "description": "Video Games!",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "age_ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgeRatingEnums"
            }
          },
          "aggregated_rating": {
            "type": "number",
            "format": "double",
            "description": "Rating based on external critic scores"
          },
          "aggregated_rating_count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of external critic scores"
          },
          "alternative_names": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlternativeNames/properties/id"
            }
          },
          "artworks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artwork/properties/id"
            }
          },
          "bundles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "category": {
            "$ref": "#/components/schemas/GameCategoryEnums"
          },
          "collection": {
            "type": "number",
            "format": "int32",
            "description": "DEPRRICATED - Use collections field. Reference ID for collection",
            "deprecated": true
          },
          "collections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Collection/properties/id"
            }
          },
          "cover": {
            "$ref": "#/components/schemas/Cover/properties/id"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "dlcs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "expanded_games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "expansions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "external_games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalGame/properties/id"
            }
          },
          "follows": {
            "type": "number",
            "format": "int32",
            "description": "DEPRECATED- TO BE REMOVED. The number of people following a game",
            "deprecated": true
          },
          "first_release_date": {
            "type": "number",
            "format": "timestamp",
            "description": "The first release date for this game"
          },
          "forks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            }
          },
          "franchise": {
            "type": "string",
            "description": "The main franchise"
          },
          "franchises": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Other franchises the game belongs to"
          },
          "game_engines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameEngine/properties/id"
            },
            "description": "The game engine used in this game"
          },
          "game_localizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameLocalization/properties/id"
            },
            "description": "Supported game localizations for this game. A region can have at most one game localization for a given game"
          },
          "game_modes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameMode/properties/id"
            },
            "description": "Modes of gameplay"
          },
          "genres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Genre/properties/id"
            },
            "description": "Genres of the game"
          },
          "hypes": {
            "type": "integer",
            "format": "int32",
            "description": "Number of follows a game gets before release"
          },
          "involved_companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Company/properties/id"
            },
            "description": "Companies who developed this game"
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword/properties/id"
            },
            "description": "Associated keywords"
          },
          "language_supports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageSupport/properties/id"
            },
            "description": "Supported Languages for this game"
          },
          "multiplayer_modes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiplayerMode/properties/id"
            },
            "description": "Multiplayer modes for this game"
          },
          "name": {
            "type": "string",
            "description": "The name of the Game"
          },
          "parent_game": {
            "$ref": "#/components/schemas/Games/properties/id",
            "description": "If a DLC, expansion or part of a bundle, this is the main game or bundle"
          },
          "platforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Platform/properties/id"
            },
            "description": "Platforms this game was released on"
          },
          "player_perspectives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerPerspective/properties/id"
            },
            "description": "The main perspective of the player"
          },
          "ports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Ports of this game"
          },
          "rating": {
            "type": "number",
            "format": "double",
            "description": "Average IGDB user rating"
          },
          "rating_count": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of IGDB user ratings"
          },
          "release_dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReleaseDate/properties/id"
            },
            "description": "Release dates of this game"
          },
          "remakes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Remakes of this game"
          },
          "remasters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Remasters of this game"
          },
          "screenshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Screenshot/properties/id"
            },
            "description": "Screenshots of this game"
          },
          "similar_games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Similar games"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "standalone_expansions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Standalone expansions of this game"
          },
          "status": {
            "$ref": "#/components/schemas/GameStatusEnums"
          },
          "storyline": {
            "type": "string",
            "description": "A short description of a games story"
          },
          "summary": {
            "type": "string",
            "description": "A description of the game"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Related entities in the IGDB API"
          },
          "themes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Theme/properties/id"
            },
            "description": "Themes of the game"
          },
          "total_rating": {
            "type": "number",
            "format": "double",
            "description": "Average rating based on both IGDB user and external critic scores"
          },
          "total_rating_count": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of user and external critic scores"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "version_parent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "If a version, this is the main game"
          },
          "version_title": {
            "type": "string",
            "description": "Title of this version (i.e Gold edition)"
          },
          "videos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameVideo/properties/id"
            },
            "description": "Videos of this game"
          },
          "websites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Website/properties/id"
            },
            "description": "Websites associated with this game"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameCategoryEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14
        ],
        "x-enum-varnames": [
          "main_game",
          "dlc_addon",
          "expansion",
          "bundle",
          "standalone_expansion",
          "mod",
          "episode",
          "season",
          "remake",
          "remaster",
          "expanded_game",
          "port",
          "fork",
          "pack",
          "update"
        ],
        "x-enum-descriptions": [
          "main_game",
          "dlc_addon",
          "expansion",
          "bundle",
          "standalone_expansion",
          "mod",
          "episode",
          "season",
          "remake",
          "remaster",
          "expanded_game",
          "port",
          "fork",
          "pack",
          "update"
        ],
        "description": "A game's category/catagories  \n0: main_game  \n1: dlc_addon  \n2: expansion  \n3: bundle  \n4: standalone_expansion  \n5: mod  \n6: episode  \n7: season  \n8: remake  \n9: remaster  \n10: expanded_game  \n11: port  \n12: fork  \n13: pack  \n14: update  \n"
      },
      "GameStatusEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "x-enum-varnames": [
          "released",
          "alpha",
          "beta",
          "early_access",
          "offline",
          "cancelled",
          "rumored",
          "delisted"
        ],
        "x-enum-descriptions": [
          "released",
          "alpha",
          "beta",
          "early_access",
          "offline",
          "cancelled",
          "rumored",
          "delisted"
        ],
        "description": "A game's operational status  \n0: released  \n2: alpha  \n3: beta  \n4: early_access  \n5: offline  \n6: cancelled  \n7: rumored  \n8: delisted  \n"
      },
      "GameEngine": {
        "type": "object",
        "description": "Video game engines such as unreal engine",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Company/properties/id"
            }
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "description": {
            "type": "string",
            "description": "Description of the game engine"
          },
          "logo": {
            "$ref": "#/components/schemas/GameEngineLogo/properties/id",
            "description": "Logo of the game engine"
          },
          "name": {
            "type": "string",
            "description": "Name of the game engine"
          },
          "platforms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Platform/properties/id"
            },
            "description": "Platforms this game engine was deployed on"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "uuid",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameEngineLogo": {
        "type": "object",
        "description": "The logos of developers and publishers",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "ExternalGame": {
        "type": "object",
        "description": "Game IDs on other services",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/ExternalGameCategoryEnums",
            "description": "The id of the other service"
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "The ISO country code of the external game product."
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "media": {
            "$ref": "#/components/schemas/ExternalGameMediaEnums",
            "description": "The media of the external game."
          },
          "name": {
            "type": "string",
            "description": "The name of the game according to the other service"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform/properties/id",
            "description": "The platform of the external game product."
          },
          "uid": {
            "type": "string",
            "description": "The other services ID for this game"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "description": "The year in full (2018)"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "ExternalGameCategoryEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          5,
          10,
          11,
          13,
          14,
          15,
          20,
          22,
          23,
          26,
          28,
          29,
          30,
          31,
          32,
          36,
          37,
          54,
          55
        ],
        "x-enum-varnames": [
          "steam",
          "gog",
          "youtube",
          "microsoft",
          "apple",
          "twitch",
          "android",
          "amazon_asin",
          "amazon_luna",
          "amazon_adg",
          "epic_game_store",
          "oculus",
          "utomik",
          "itch_io",
          "xbox_marketplace",
          "kartridge",
          "playstation_store_us",
          "focus_entertainment",
          "xbox_game_pass_ultimate_cloud",
          "gamejolt"
        ],
        "x-enum-descriptions": [
          "steam",
          "gog",
          "youtube",
          "microsoft",
          "apple",
          "twitch",
          "android",
          "amazon_asin",
          "amazon_luna",
          "amazon_adg",
          "epic_game_store",
          "oculus",
          "utomik",
          "itch_io",
          "xbox_marketplace",
          "kartridge",
          "playstation_store_us",
          "focus_entertainment",
          "xbox_game_pass_ultimate_cloud",
          "gamejolt"
        ],
        "description": "The external platform the game is on  \n1: steam  \n5: gog  \n10: youtube  \n11: microsoft  \n13: apple  \n14: twitch  \n15: android  \n20: amazon_asin  \n22: amazon_luna  \n23: amazon_adg  \n26: epic_game_store  \n28: oculus  \n29: utomik  \n30: itch_io  \n31: xbox_marketplace  \n32: kartridge  \n36: playstation_store_us  \n37: focus_entertainment  \n54: xbox_game_pass_ultimate_cloud  \n55: gamejolt  \n"
      },
      "ExternalGameMediaEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2
        ],
        "x-enum-varnames": [
          "digital",
          "physical"
        ],
        "x-enum-descriptions": [
          "digital",
          "physical"
        ],
        "description": "The type of media  \n1: digital  \n2: physical  \n"
      },
      "GameVersion": {
        "type": "object",
        "description": "Details about game editions and versions. (DLC and more)",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameVersionFeatures/properties/id"
            },
            "description": "Features and descriptions of what makes each version/edition different from the main game"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id",
            "description": "The game these versions/editions are of"
          },
          "games": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Games/properties/id"
            },
            "description": "Game Versions and Editions"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameMode": {
        "type": "object",
        "description": "Single player, Multiplayer, etc.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "name": {
            "type": "string",
            "description": "The name of the game mode"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameVersionFeatures": {
        "type": "object",
        "description": "Features and descriptions of what makes each version/edition different from the main game",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/GameVersionFeatureCategoryEnums",
            "description": "The category of the feature description"
          },
          "description": {
            "type": "string",
            "description": "The description of the feature"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "description": "Position of this feature in the list of features"
          },
          "title": {
            "type": "string",
            "description": "The title of the version/addition/DLC"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GameVersionFeatures/properties/id"
            },
            "description": "The bool/text value of the feature"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameVersionFeatureCategoryEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1
        ],
        "x-enum-varnames": [
          "boolean",
          "description"
        ],
        "x-enum-descriptions": [
          "boolean",
          "description"
        ],
        "description": "The data type of feature description  \n0: boolean  \n1: description  \n"
      },
      "GameVersionFeatureValue": {
        "type": "object",
        "description": "The bool/text value of the feature",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "game_feature": {
            "$ref": "#/components/schemas/GameVersionFeatures/properties/id"
          },
          "included_feature": {
            "$ref": "#/components/schemas/GameVersionIncludedFeatureEnums"
          },
          "note": {
            "type": "string",
            "description": "The text value of this feature"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameVersionIncludedFeatureEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-varnames": [
          "not_included",
          "included",
          "pre_order_only"
        ],
        "x-enum-descriptions": [
          "not_included",
          "included",
          "pre_order_only"
        ],
        "description": "The value of this feature  \n0: NOT_INCLUDED  \n1: INCLUDED  \n2: PRE_ORDER_ONLY  \n"
      },
      "Genre": {
        "type": "object",
        "description": "Genres of video games",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "name": {
            "type": "string",
            "description": "The name of the genre"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "InvolvedCompany": {
        "type": "object",
        "description": "Involved companies",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "company": {
            "$ref": "#/components/schemas/Company/properties/id"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initally added to the IGDB database"
          },
          "developer": {
            "type": "boolean",
            "description": "Is the company a/the developer?"
          },
          "game": {
            "$ref": "#/components/schemas/Company/properties/id"
          },
          "porting": {
            "type": "boolean",
            "description": "Did the company port the game?"
          },
          "publisher": {
            "type": "boolean",
            "description": "Did the company publish the game?"
          },
          "supporting": {
            "type": "boolean",
            "description": "Did the company suppport the game?"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameVideo": {
        "type": "object",
        "description": "A video associated with a game",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "name": {
            "type": "string",
            "description": "The name of the video"
          },
          "video_id": {
            "type": "string",
            "description": "The external ID of the video (usually youtube)"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Keyword": {
        "type": "object",
        "description": "Keywords are words or phrases that get tagged to a game such as “world war 2” or “steampunk”.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "name": {
            "type": "string",
            "description": "The keyword"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The last date this entry was updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Language": {
        "type": "object",
        "description": "Languages that are used in the Language Support endpoint.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the localization"
          },
          "native_name": {
            "type": "string",
            "description": "The native name of the language"
          },
          "locale": {
            "type": "string",
            "description": "The combination of Language code and Country code (en-US)"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "GameLocalization": {
        "type": "object",
        "description": "Game localization for a game",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The localized name"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "cover": {
            "$ref": "#/components/schemas/Cover/properties/id",
            "description": "Date this was initially added to the IGDB database"
          },
          "region": {
            "$ref": "#/components/schemas/Region/properties/id",
            "description": "The region ID"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "LanguageSupportType": {
        "type": "object",
        "description": "Language Support Types contains the identifiers for the support types that Language Support uses.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the method of support. (Audio, Subtitles, etc)"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "MultiplayerMode": {
        "type": "object",
        "description": "Data about the supported multiplayer types",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "camapigncoop": {
            "type": "boolean",
            "description": "True if the game supports campaign coop"
          },
          "dropin": {
            "type": "boolean",
            "description": "True if the game supports drop in/out multiplayer"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "lancoop": {
            "type": "boolean",
            "description": "True if the game supports LAN coop"
          },
          "offlinecoop": {
            "type": "integer",
            "description": "True if the game supports offline coop"
          },
          "offliencoopmax": {
            "type": "number",
            "format": "int32",
            "description": "Maximum number of offline players in offline coop"
          },
          "offlinemax": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of players in offline multiplayer"
          },
          "onlinecoop": {
            "type": "boolean",
            "description": "True if the game supports online coop"
          },
          "onlinecoopmax": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of online players in online coop"
          },
          "onlinemax": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of online players in online coop"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform/properties/id"
          },
          "splitscreen": {
            "type": "boolean",
            "description": "True if the game supports, split screen, offline multiplayer"
          },
          "splitscreenonline": {
            "type": "boolean",
            "description": "True if the game supports split screen, online multiplayer"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "LanguageSupport": {
        "type": "object",
        "description": "Games can be played with different languages for voice acting, subtitles, or the interface language.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "language": {
            "$ref": "#/components/schemas/Language/properties/id"
          },
          "language_support_type": {
            "$ref": "#/components/schemas/LanguageSupportType/properties/id"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "NetworkType": {
        "type": "object",
        "description": "Social networks related to the event like twitter, facebook and youtube",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the social network"
          },
          "event_networks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventNetwork/properties/id"
            }
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformFamily": {
        "type": "object",
        "description": "A collection of closely related platforms",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the platform family"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformLogo": {
        "type": "object",
        "description": "Logo for a platform",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformVersion": {
        "type": "object",
        "description": "The specific platform and the specifications (Xbox Series X, Playstation 5)",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformVersionCompany/properties/id"
            }
          },
          "connectivity": {
            "type": "string",
            "description": "The network capabilities"
          },
          "cpu": {
            "type": "string",
            "description": "The integrated central processing unit"
          },
          "graphics": {
            "type": "string",
            "description": "The graphics chipset"
          },
          "main_manufacturer": {
            "$ref": "#/components/schemas/PlatformVersionCompany/properties/id"
          },
          "media": {
            "type": "string",
            "description": "The type of media this version accepts"
          },
          "memory": {
            "type": "string",
            "description": "How much memory there is"
          },
          "name": {
            "type": "string",
            "description": "The name of the platform version"
          },
          "online": {
            "type": "string",
            "description": "The online service, like Xbox Live"
          },
          "os": {
            "type": "string",
            "description": "The operating system installed on the platform version"
          },
          "output": {
            "type": "string",
            "description": "The output video rate"
          },
          "platform_logo": {
            "$ref": "#/components/schemas/PlatformLogo/properties/id"
          },
          "platform_version_release_dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformVersionReleaseDate/properties/id"
            }
          },
          "resolutions": {
            "type": "string",
            "description": "The maximum resolution"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "sound": {
            "type": "string",
            "description": "The sound chipset"
          },
          "storage": {
            "type": "string",
            "description": "How much storage there is"
          },
          "summary": {
            "type": "string",
            "description": "A short summary"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformVersionCompany": {
        "type": "object",
        "description": "A platform developer",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "comment": {
            "type": "string",
            "description": "Any notable comments about the developer"
          },
          "company": {
            "$ref": "#/components/schemas/Company/properties/id"
          },
          "developer": {
            "type": "boolean",
            "description": "If the company is the developer"
          },
          "manufacturer": {
            "type": "boolean",
            "description": "If the company is the manufactuer"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Platform": {
        "type": "object",
        "description": "The hardware used to run the game or game delivery network",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "abbreviation": {
            "type": "string",
            "description": "An abbreviation of the platform name"
          },
          "alternative_name": {
            "type": "string",
            "description": "An alternative name for the platform"
          },
          "category": {
            "$ref": "#/components/schemas/PlatformCategoryEnums"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "generation": {
            "type": "integer",
            "format": "int32",
            "description": "The generation of the platform"
          },
          "name": {
            "type": "string",
            "description": "The name of the platform"
          },
          "platform_family": {
            "$ref": "#/components/schemas/PlatformFamily/properties/id"
          },
          "platform_logo": {
            "$ref": "#/components/schemas/PlatformLogo/properties/id"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "summary": {
            "type": "string",
            "description": "The summary of the first Version of this platform"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformVersion/properties/id"
            }
          },
          "websites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlatformWebsite/properties/id"
            }
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformCategoryEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "x-enum-varnames": [
          "console",
          "arcade",
          "platform",
          "operating_system",
          "portable_console",
          "computer"
        ],
        "x-enum-descriptions": [
          "console",
          "arcade",
          "platform",
          "operating_system",
          "portable_console",
          "computer"
        ],
        "description": "The category of the platform  \n1: console  \n2: arcade  \n3: platform  \n4: operating_system  \n5: portable_console  \n6: computer  \n"
      },
      "PlatformVersionReleaseDate": {
        "type": "object",
        "description": "A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/PlatformVersionReleaseDateEnums"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "date": {
            "type": "string",
            "format": "timestamp",
            "description": "The release date"
          },
          "human": {
            "type": "string",
            "description": "A human readable version of the release date"
          },
          "m": {
            "type": "integer",
            "format": "int32",
            "description": "The month as an integer starting at 1 (January)"
          },
          "platform_version": {
            "$ref": "#/components/schemas/PlatformVersion/properties/id"
          },
          "region": {
            "$ref": "#/components/schemas/PlatformVersionReleaseDateRegionEnum"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "y": {
            "type": "integer",
            "format": "int32",
            "description": "The year in full (2018)"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformVersionReleaseDateEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "x-enum-varnames": [
          "YYYYMMMMDD",
          "YYYYMMMM",
          "YYYY",
          "YYYYQ1",
          "YYYYQ2",
          "YYYYQ3",
          "YYYYQ4",
          "TBD"
        ],
        "x-enum-descriptions": [
          "YYYYMMMMDD",
          "YYYYMMMM",
          "YYYY",
          "YYYYQ1",
          "YYYYQ2",
          "YYYYQ3",
          "YYYYQ4",
          "TBD"
        ],
        "description": "An enum of the date format  \n0: YYYYMMMMDD  \n1: YYYYMMMM  \n2: YYYY  \n3: YYYYQ1  \n4: YYYYQ2  \n5: YYYYQ3  \n6: YYYYQ4  \n7: TBD  \n"
      },
      "PlatformVersionReleaseDateRegionEnum": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "x-enum-varnames": [
          "europe",
          "north_america",
          "australia",
          "new_zealand",
          "japan",
          "china",
          "asia",
          "worldwide",
          "korea",
          "brazil"
        ],
        "x-enum-descriptions": [
          "europe",
          "north_america",
          "australia",
          "new_zealand",
          "japan",
          "china",
          "asia",
          "worldwide",
          "korea",
          "brazil"
        ],
        "description": "An enum of the region for the release date  \n1: europe  \n2: north_america  \n3: australia  \n4: new_zealand  \n5: japan  \n6: china  \n7: asia  \n8: worldwide  \n9: korea  \n10: brazil  \n"
      },
      "PlatformWebsite": {
        "type": "object",
        "description": "The main website for the platform",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/PlatformWebsiteCategoryEnums"
          },
          "trusted": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The main platform address (URL) of the platform"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PlatformWebsiteCategoryEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20
        ],
        "x-enum-varnames": [
          "official",
          "wikia",
          "wikipedia",
          "facebook",
          "twitter",
          "twitch",
          "instagram",
          "youtube",
          "iphone",
          "ipad",
          "android",
          "steam",
          "reddit",
          "discord",
          "google_plus",
          "tumblr",
          "linkedin",
          "pinterest",
          "soundcloud"
        ],
        "x-enum-descriptions": [
          "official",
          "wikia",
          "wikipedia",
          "facebook",
          "twitter",
          "twitch",
          "instagram",
          "youtube",
          "iphone",
          "ipad",
          "android",
          "steam",
          "reddit",
          "discord",
          "google_plus",
          "tumblr",
          "linkedin",
          "pinterest",
          "soundcloud"
        ],
        "description": "The platform website  \n1: official  \n2: wikia  \n3: wikipedia  \n4: facebook  \n5: twitter  \n6: twitch  \n8: instagram  \n9: youtube  \n10: iphone  \n11: ipad  \n12: android  \n13: steam  \n14: reddit  \n15: discord  \n16: google_plus  \n17: tumblr  \n18: linkedin  \n19: pinterest  \n20: soundcloud  \n"
      },
      "PlayerPerspective": {
        "type": "object",
        "description": "Player perspectives describe the view/perspective of the player in a video game.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "name": {
            "type": "string",
            "description": "The perspective"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "PopularityPrimatives": {
        "type": "object",
        "description": "Lists abailable primatives with their source and popularity type",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "game_id": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "popularity_type": {
            "$ref": "#/components/schemas/PopularityTypes/properties/id"
          },
          "popularity_source": {
            "$ref": "#/components/schemas/PopularityPrimitiveEnum"
          },
          "value": {
            "type": "number",
            "format": "int32",
            "description": "The rating value"
          },
          "calculated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Timestamp of when the primatives were calculated"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          }
        }
      },
      "PopularityPrimitiveEnum": {
        "type": "integer",
        "format": "int32",
        "enum": [
          121
        ],
        "x-enum-varnames": [
          "igdb"
        ],
        "x-enum-descriptions": [
          "igdb"
        ],
        "description": "121: IGDB\n"
      },
      "PopularityTypes": {
        "type": "object",
        "description": "Describes what type of popularity primative or popularity indicator the popularity indicator the popularity value is",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "popularity_source": {
            "$ref": "#/components/schemas/PopularityTypeEnum"
          },
          "name": {
            "type": "string",
            "description": "The name of the type of popularity from the source"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "The IGDB object unique identifier"
          }
        }
      },
      "PopularityTypeEnum": {
        "type": "integer",
        "format": "int32",
        "enum": [
          121
        ],
        "x-enum-varnames": [
          "igdb"
        ],
        "x-enum-descriptions": [
          "igdb"
        ],
        "description": "121: IGDB\n"
      },
      "Region": {
        "type": "object",
        "description": "Region for game localization",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the region"
          },
          "category": {
            "format": "string",
            "enum": [
              "locale",
              "continent"
            ],
            "description": "Whether the region is a local or continent"
          },
          "identifier": {
            "format": "string",
            "description": "This is the identifier of each region"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "ReleaseDate": {
        "type": "object",
        "description": "A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/ReleaseDateCategoryEnums"
          },
          "created_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was initially added to the IGDB database"
          },
          "date": {
            "type": "string",
            "format": "timestamp",
            "description": "The release date"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "human": {
            "type": "string",
            "description": "A human readable version of the release date"
          },
          "m": {
            "type": "integer",
            "format": "int32",
            "description": "The month as an integer starting at 1 (January)"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform/properties/id"
          },
          "region": {
            "$ref": "#/components/schemas/ReleaseDateRegionEnum"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "y": {
            "type": "integer",
            "format": "int32",
            "description": "The year in full (2018)"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "ReleaseDateCategoryEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "x-enum-varnames": [
          "YYYYMMMMDD",
          "YYYYMMMM",
          "YYYY",
          "YYYYQ1",
          "YYYYQ2",
          "YYYYQ3",
          "YYYYQ4",
          "TBD"
        ],
        "x-enum-descriptions": [
          "YYYYMMMMDD",
          "YYYYMMMM",
          "YYYY",
          "YYYYQ1",
          "YYYYQ2",
          "YYYYQ3",
          "YYYYQ4",
          "TBD"
        ],
        "description": "An enum of the date format  \n0: YYYYMMMMDD  \n1: YYYYMMMM  \n2: YYYY  \n3: YYYYQ1  \n4: YYYYQ2  \n5: YYYYQ3  \n6: YYYYQ4  \n7: TBD  \n"
      },
      "ReleaseDateRegionEnum": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "x-enum-varnames": [
          "europe",
          "north_america",
          "australia",
          "new_zealand",
          "japan",
          "china",
          "asia",
          "worldwide",
          "korea",
          "brazil"
        ],
        "x-enum-descriptions": [
          "europe",
          "north_america",
          "australia",
          "new_zealand",
          "japan",
          "china",
          "asia",
          "worldwide",
          "korea",
          "brazil"
        ],
        "description": "An enum of the region for the release date  \n1: europe  \n2: north_america  \n3: australia  \n4: new_zealand  \n5: japan  \n6: china  \n7: asia  \n8: worldwide  \n9: korea  \n10: brazil  \n"
      },
      "ReleaseDateStatus": {
        "type": "object",
        "description": "An endpoint to provide definition of all of the current release date statuses.",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the release date status"
          },
          "description": {
            "type": "string",
            "description": "The description of the release date status."
          },
          "created_at": {
            "type": "number",
            "format": "date",
            "description": "Date this was initially added to the IGDB database"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Screenshot": {
        "type": "object",
        "description": "Screenshots of games",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alpha_channel": {
            "type": "boolean"
          },
          "animated": {
            "type": "boolean"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "description": "The height of the image in pixels"
          },
          "image_id": {
            "type": "string",
            "description": "The ID of the image used to construct an IGDB image link"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "description": "The width of the image in pixels"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Search": {
        "type": "object",
        "description": "Search IGDB and get the IDs of items matching your search",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "alternative_name": {
            "type": "string"
          },
          "character": {
            "$ref": "#/components/schemas/Character/properties/id"
          },
          "collection": {
            "$ref": "#/components/schemas/Collection/properties/id"
          },
          "company": {
            "$ref": "#/components/schemas/Company/properties/id"
          },
          "description": {
            "type": "string"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "name": {
            "type": "string"
          },
          "platform": {
            "$ref": "#/components/schemas/Platform/properties/id"
          },
          "published_at": {
            "type": "number",
            "format": "timestamp",
            "description": "The date this item was initally published by the third party"
          },
          "test_dummy": {
            "type": "number",
            "description": "Reference ID for Test Dummy"
          },
          "theme": {
            "$ref": "#/components/schemas/Theme/properties/id"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Theme": {
        "type": "object",
        "description": "Video game themes",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "name": {
            "type": "string",
            "description": "The name of the theme"
          },
          "slug": {
            "type": "string",
            "description": "A url-safe, unique, lower-case version of the name"
          },
          "updated_at": {
            "type": "number",
            "format": "timestamp",
            "description": "Date this was last updated in the IGDB database"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The website address (URL) of the item"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "Website": {
        "type": "object",
        "description": "A website URL, usually associated with a game",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "The IGDB object unique identifier"
          },
          "category": {
            "$ref": "#/components/schemas/WebsiteCategoryEnums"
          },
          "game": {
            "$ref": "#/components/schemas/Games/properties/id"
          },
          "trusted": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "The main platform address (URL) of the platform"
          },
          "checksum": {
            "type": "string",
            "format": "uuid",
            "description": "Hash of the object"
          }
        }
      },
      "WebsiteCategoryEnums": {
        "type": "integer",
        "format": "int32",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18
        ],
        "x-enum-varnames": [
          "official",
          "wikia",
          "wikipedia",
          "facebook",
          "twitter",
          "twitch",
          "instagram",
          "youtube",
          "iphone",
          "ipad",
          "android",
          "steam",
          "reddit",
          "itch",
          "epicgames",
          "gog",
          "discord"
        ],
        "x-enum-descriptions": [
          "official",
          "wikia",
          "wikipedia",
          "facebook",
          "twitter",
          "twitch",
          "instagram",
          "youtube",
          "iphone",
          "ipad",
          "android",
          "steam",
          "reddit",
          "itch",
          "epicgames",
          "gog",
          "discord"
        ],
        "description": "The platform website  \n1: official  \n2: wikia  \n3: wikipedia  \n4: facebook  \n5: twitter  \n6: twitch  \n8: instagram  \n9: youtube  \n10: iphone  \n11: ipad  \n12: android  \n13: steam  \n14: reddit  \n15: itch  \n16: epicgames  \n17: gog  \n18: discord  \n"
      }
    },
    "securitySchemes": {
      "TwitchOAuth": {
        "type": "oauth2",
        "description": "Retrieve/Refresh your Authorization Token from the Twitch OAuth service",
        "x-receive-token-in": "request-body",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://id.twitch.tv/oauth2/token",
            "refreshUrl": "https://id.twitch.tv/oauth2/token",
            "scopes": {}
          }
        }
      },
      "Client-ID": {
        "type": "apiKey",
        "name": "Client-ID",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Endpoints"
    }
  ]
}