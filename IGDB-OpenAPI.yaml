openapi: 3.0.0
info:
  title: IGDB API
  version: 4.0.0
  contact:
    name: IGDB Support
    url: https://www.igdb.com/contact
    email: support@igdb.com
  license:
    url: https://www.twitch.tv/p/legal/developer-agreement/
    name: Twitch Developer Services Agreement
  description: |
    This OpenAPI documentation and schema project IS IN BETA and maintained by [s-crypt.](https://github.com/s-crypt)
    
    The source code and more information is [available in the GitHub repository](https://github.com/s-crypt/IGDB-OpenAPI)
    
    Issues and pull requests are welcome! Please report any bugs or discrepancies you come across!
    
    
    # Getting Started
    <p>One of the principles behind IGDB.com is accessibility of data. We wish to share the data with anyone who wants to build cool video game oriented websites, apps and services.</p>
    <p>This means that you are not only contributing to the value of IGDB but to thousands of other projects as well. We are looking forward to see what exciting game related projects you come up with. Happy coding!</p>
    <p>For a high level overview of our juicy data, check out the <a href="#tag--Endpoints">endpoints section</a>.</p>
    
    <aside style="text-align: center; color: white">
      <b>START USING US NOW, IT'S FREE!</b>
    </aside>
    

    <hr>
    
    ## Account Creation
    <p>In order to use our API, you must have a Twitch Account.</p>

    1.  Sign Up with [Twitch](https://dev.twitch.tv/login) for a free account
    2.  Ensure you have Two Factor Authentication [enabled](https://www.twitch.tv/settings/security)
    3.  Register your application in the [Twitch Developer Portal](https://dev.twitch.tv/console/apps/create)
    4.  [Manage](https://dev.twitch.tv/console/apps) your newly created application
    5.  Generate a Client Secret by pressing `[New Secret]`
    6.  Take note of the Client ID and Client Secret

    <p> The IGDB.com API is free for <strong>non-commercial</strong> usage under the terms of the <a rel="“nofollow”" href="https://www.twitch.tv/p/legal/developer-agreement/">Twitch Developer Service Agreement</a>. </p>
    <aside class="info">
      <b>Note:</b> We offer commercial partnership for users with a commercial need in their projects. For more details on that process please reach out to
      <a href="mailto: partner@igdb.com">partner@igdb.com</a>
    </aside>
    
    
    <br />
    <hr>
    
    ## Authentication
    <p> Now that you have a Client ID and Client Secret you will be authenticating as a Twitch Developer using Oauth2.<br /> Detailed information can be found in the <a href="https://dev.twitch.tv/docs/authentication">Twitch Developer Docs</a>. </p>
    <p>Make a <code>POST</code> request to <code>https://id.twitch.tv/oauth2/token</code> with the following query string parameters, substituting your Client ID and Client Secret accordingly.</p>
    <p><code>client_id=Client ID</code></p>
    <p><code>client_secret=Client Secret</code></p>
    <p><code>grant_type=client_credentials</code></p>
    
    ## Example
    <p>If your Client ID is <code>abcdefg12345</code> and your Client Secret is <code>hijklmn67890</code>, the whole url should look like the following.</p>
    <pre><code><span style="display: flex"><span><span style="color: #f92672">POST</span>: <span style="color: #ae81ff">https://id.twitch.tv/oauth2/token?client_id=abcdefg12345&amp;client_secret=hijklmn67890&amp;grant_type=client_credentials</span> </span></span></code></pre>
    <p>The response from this will be a json object containing the access token and the number of second until the token expires.</p>
    <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><br /><code data-lang="json"><span style="display:flex;"><span>{ </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;access_token&quot;</span>: <span style="color:#e6db74">&quot;access12345token&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;expires_in&quot;</span>: <span style="color:#ae81ff">5587808</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;token_type&quot;</span>: <span style="color:#e6db74">&quot;bearer&quot;</span> </span></span><span style="display:flex;"><span>}</span></span><br /></code></pre>
    <aside>
      <b>Note:</b> The
      <i>expires_in</i> shows you the number of seconds before the
      <i>access_token</i> will expire and must be refreshed.
    </aside>
    
    
    <br />
    <hr>
    
    ## Requests
    <ul>
      <li>Most of the requests to the API will use the <code>POST</code> method</li>
      <li> The base URL is: <strong><a href="https://api.igdb.com/v4">https://api.igdb.com/v4</a></strong> </li>
      <li> You define which endpoint you wish to query by appending <code>/{endpoint name}</code> to the base URL eg. <strong><a href="https://api.igdb.com/v4/games">https://api.igdb.com/v4/games</a></strong> </li>
      <li> Include your <code>Client ID</code> and <code>Access Token</code> in the <code>HEADER</code> of your request so that your headers look like the following.
      <ul>
        <li>Take special care of the capitalisation. <code>Bearer</code> should be hard-coded infront of your <code>access_token</code></li>
      </ul> </li>
    </ul>
    <div>
      <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><br /><code data-lang="yaml"><span style="display:flex; padding-left: 20px;"><span><span style="color:#f92672">Client-ID</span>: <span style="color:#ae81ff">Client ID</span> </span></span><span style="display:flex; padding-left: 20px;"><span><span style="color:#f92672">Authorization</span>: <span style="color:#ae81ff">Bearer access_token</span></span></span><br /></code></pre>
    </div>
    <ul>
      <li>You use the <code>BODY</code> of your request to specify the fields you want to retrieve as well as any other filters, sorting etc</li>
    </ul>
    <strong>Note:</strong> If you are trying to make these requests via the Browser you will run into CORS errors as the API does not allow requests directly from browsers. You can use the built-in CORS proxy by selecting the
    <code>https://corsproxy.io/?https://api.igdb.com/v4</code> server above. USE AT YOUR OWN RISK as it is a third party proxy run by the people at corsproxy.io.
    
    
    
    <br />
    <hr>
    
    ## Rate Limits
    <p>There is a rate limit of <strong>4 requests per second</strong>. If you go over this limit you will receive a response with status code <code>429 Too Many Requests</code>.</p>
    <p>You are able to have up to 8 <em>open</em> requests at any moment in time. This can occur if requests take longer than 1 second to respond when multiple requests are being made.</p>
    <br />
    <hr>
    
    ## Wrappers
    <p>Get setup quickly by using one of these wrappers!</p>
    
    ### Apicalypse
    <ul>
      <li><a href="https://github.com/igdb/node-apicalypse">NodeJS</a></li>
      <li><a href="https://github.com/husnjak/IGDB-API-JVM">JVM/Kotlin/Java</a></li>
      <li><a href="https://github.com/husnjak/IGDB-SWIFT-API">Swift</a></li>
      <li><a href="https://github.com/twitchtv/igdb-api-python">Python</a></li>
    </ul>
    
    ### Third Party
    <ul>
      <li><a href="https://github.com/marcreichel/igdb-laravel">PHP/Laravel</a></li>
      <li><a href="https://github.com/Henry-Sarabia/apicalypse">GO</a></li>
      <li><a href="https://github.com/ad2games/ruby-apicalypse">Ruby</a></li>
      <li><a href="https://github.com/kamranayub/igdb-dotnet">C#/.NET</a></li>
    </ul>
    <br />
    <hr>
    
    # Examples
    <p>It’s recommended to try out your queries in an API viewer like <a href="https://www.postman.com/">Postman</a> or <a href="https://insomnia.rest/">Insomnia</a> before using code. This helps you find problems a lot sooner!</p>
    <p>Postman setup example</p>
    <p> <img src="assets/postman1.png" alt="" /> </p>
    <p> <img src="assets/postman2.png" alt="" /> </p>
    
      ### A very basic example to retrieve the name for 10 games.
      <p> <a href="https://api.igdb.com/v4/games/">https://api.igdb.com/v4/games/</a> </p>
      <pre tabindex="0"><code>fields name; limit 10;
          </code></pre>
          
      ### Get all information from a specific game
      <p>1942, is the ID of a game.</p>
      <p> <a href="https://api.igdb.com/v4/games/">https://api.igdb.com/v4/games/</a> </p>
      <pre tabindex="0"><code>fields *; where id = 1942;
          </code></pre>
          
      ### Exclude irrelevant data from your query
      <p>Remove alternative_name from your result query</p>
      <p> <a href="https://api.igdb.com/v4/platforms/">https://api.igdb.com/v4/platforms/</a> </p>
      <pre tabindex="0"><code>fields *;<br />exclude alternative_name;
          </code></pre>
          
      ### Get all games from specific genres
      <p>Notice how you can comma separate multiple IDs (8, 9, and 11). You can do this with games, companies and anything else. Also note that when you have multiple IDs they have to be surrounded by a parenthesis. Single ids can be queried both with and without the parenthesis.</p>
      <p> <a href="https://api.igdb.com/v4/genres/">https://api.igdb.com/v4/genres/</a> </p>
      <pre tabindex="0"><code>fields *; where id = (8,9,11);
          </code></pre>
          
      ### Count total games that have a rating higher than 75
      <p> <a href="https://api.igdb.com/v4/games/count">https://api.igdb.com/v4/games/count</a> </p>
      <pre tabindex="0"><code>where rating &gt; 75;
          </code></pre>
          
      ### Order by rating
      <p> <a href="https://api.igdb.com/v4/games/">https://api.igdb.com/v4/games/</a> </p>
      <pre tabindex="0"><code>fields name,rating; sort rating desc;
          </code></pre>
          
      ### Coming soon games for Playstation 4
      <p> <a href="https://api.igdb.com/v4/release_dates/">https://api.igdb.com/v4/release_dates/</a> </p>
      <pre tabindex="0"><code>fields *; where game.platforms = 48 &amp; date &gt; 1538129354; sort date asc;
          </code></pre>
      <p>1538129354: Is the timestamp in milliseconds of 28/09/2018 (This you need to generate yourself) 48 Is the platform id of Playstation 4.</p>
      
      ### Recently released games for Playstation 4
      <pre tabindex="0"><code>fields *; where game.platforms = 48 &amp; date &lt; 1538129354; sort date desc;
          </code></pre>
      <aside class="info">
      <b>Note:</b> &quot;where game.platforms = 48 &amp; date &gt; 1538129354&quot; It is possible to use either &amp; (AND) or | (OR) to combine filters to better define the behaviour of your query
      </aside>
      
      ### Search, return certain fields.
      <p> <a href="https://api.igdb.com/v4/games/">https://api.igdb.com/v4/games/</a> </p>
      <pre tabindex="0"><code>search &quot;Halo&quot;; fields name,release_date.human;
          </code></pre>
      <p> <a href="https://api.igdb.com/v4/games/">https://api.igdb.com/v4/games/</a> </p>
      <pre tabindex="0"><code>fields name, involved_companies; search &quot;Halo&quot;;
          </code></pre>
          
      ### Search games but exclude versions (editions)
      <p> <a href="https://api.igdb.com/v4/games/">https://api.igdb.com/v4/games/</a> </p>
      <pre tabindex="0"><code>fields name, involved_companies; search &quot;Assassins Creed&quot;; where version_parent = null;
          </code></pre>
      <p>This will return search results with ID and name of the game but exclude editions such as “Collectors Edition”.</p>
      
      ### Searching all endpoints
      <aside class="info">
      <b>Note:</b> Search is now also it's own endpoint. Search is usable on: Characters, Collections, Games, Platforms, and Themes
      </aside>
      <p>The example below searches for “Sonic the Hedgehog” which will find the Character Sonic, the collection Soninc the Hedgehog. And of course also several games with names containing Sonic the Hedgehog.</p>
      <p> <a href="https://api.igdb.com/v4/search">https://api.igdb.com/v4/search</a> </p>
      <pre tabindex="0"><code>fields *; search &quot;sonic the hedgehog&quot;; limit 50;
          </code></pre>
          
      ### Get versions (editions) of a game
      <p> <a href="https://api.igdb.com/v4/game_versions/">https://api.igdb.com/v4/game_versions/</a> </p>
      <pre tabindex="0"><code>fields game.name,games.name; where game = 28540;
          </code></pre>
      <p>The resulting object will contain all games that are a version of the game with id 28540</p>
      
      ### Get the parent game for a version
      <p> <a href="https://api.igdb.com/v4/games/">https://api.igdb.com/v4/games/</a> </p>
      <pre tabindex="0"><code>fields version_parent.*; where id = 39047;
          </code></pre>
      <p>The resulting object will contain all main games</p>
      
      ### Get all games that are playstation 4 exclusives
      <pre tabindex="0"><code>fields name,category,platforms;<br />where category = 0 &amp; platforms = 48;
          </code></pre>
          
      ### Get all games that are only released on playstation 4 AND PC
      <pre tabindex="0"><code>fields name,category,platforms;<br />where category = 0 &amp; platforms = {48,6};
          </code></pre>
    <br />
    <hr>
    
    # Webhooks
    
      ### What?
      <p>Webhooks allow us to push data to you when it is added, updated, or deleted. Instead of polling the API for changes, you can listen on your own HTTP endpoint (Webhook) and we will deliver the data to you.</p>
      <p>Using Webhooks will ensure that your data is always up to date!</p>
      <div class="highlight">
      <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="shell"><span style="display:flex;"><span>curl -X POST <span style="color:#e6db74">'https://api.igdb.com/v4/ENDPOINT/webhooks/'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-d <span style="color:#e6db74">'url=YOUR_WEBHOOK_URL&amp;secret=YOUR_WEBHOOK_SECRET&amp;method=create'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Client-ID: Client ID'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Authorization: Bearer access_token'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Content-Type: application/x-www-form-urlencoded'</span> </span></span></code></pre>
      </div>
      
      ### How to register your webhook
      <p>To register a new webhook you need to send a <code>POST</code> request to <code>ENDPOINT/webhooks</code>. The endpoint is required as it specifies what type of data you want from your webhook.</p>
      <p>The post request should contain <code>x-www-form-urlencoded</code> body with three parameters:</p>
      <ul>
      <li><code>url</code> this is your prepared url that is ready to accept data from us.</li>
      <li> <code>method</code> this is the type of data you are expecting to your url, there are three types of methods
        <ul>
        <li><code>create</code>, sends new items from the API</li>
        <li><code>delete</code>, sends deleted items from the API</li>
        <li><code>update</code>, sends updated items from the API</li>
        </ul> </li>
      <li><code>secret</code> this is your “secret” password for your webhook. Every request from the webhook service will have your secret in the header called <code>X-Secret</code>.</li>
      </ul>
      <div class="highlight">
      <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="yaml"><span style="display:flex;"><span><span style="color:#ae81ff">// Example response upon registering your webhook</span> </span></span><span style="display:flex;"><span>{ </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;: </span><span style="color:#ae81ff">WEBHOOK_ID, // A unique ID for the webhook</span> </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;url&quot;: </span><span style="color:#e6db74">&quot;YOUR_WEBHOOK_URL&quot;</span>, <span style="color:#ae81ff">// Your chosen URL</span> </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;category&quot;: </span><span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">// Based on the endpoint you chose</span> </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;sub_category&quot;: </span><span style="color:#ae81ff">0</span>, <span style="color:#ae81ff">// Based on your method (can be 0, 1, 2)</span> </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;active&quot;: </span><span style="color:#66d9ef">true</span>, <span style="color:#ae81ff">// Is the webhook currently active</span> </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;api_key&quot;: </span><span style="color:#e6db74">&quot;YOUR_CLIENT_ID&quot;</span>, <span style="color:#ae81ff">// Displays the api key the webhook is connected to</span> </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;secret&quot;: </span><span style="color:#e6db74">&quot;YOUR_SECRET&quot;</span>, <span style="color:#ae81ff">// Your chosen secret</span> </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;created_at&quot;: </span><span style="color:#e6db74">&quot;2018-11-25T23:00:00.000Z&quot;</span>, <span style="color:#ae81ff">// Created at date</span> </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;updated_at&quot;: </span><span style="color:#e6db74">&quot;2018-11-25T23:00:00.000Z&quot;</span> <span style="color:#ae81ff">// Updated at date</span> </span></span><span style="display:flex;"><span>} </span></span></code></pre>
      </div>
      <p> <img src="images/webhook_registration_postman.png" alt="" /><br /> Registering your webhook in Postman Once your webhook is registered you will receive a response with the new webhook object </p>
      <div class="highlight">
      <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="yaml"><span style="display:flex;"><span><span style="color:#ae81ff">// Delete Response from Webhook</span> </span></span><span style="display:flex;"><span>{ </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;: </span><span style="color:#e6db74">&quot;1234&quot;</span> </span></span><span style="display:flex;"><span>} </span></span></code></pre>
      </div>
      <p> That’s it!<br /> The data will now be sent to your webhook in the body of a post request. The data is a single json object representing an <strong>unexpanded entity</strong>.<br /> Webhooks from <strong>DELETE</strong> do not send the entire object but only the <strong>ID</strong>. </p>
      <aside class="info">
      <b>Tip!</b> Always validate your received data with you secret!
      </aside>
      <p>Webhooks have an <code>active</code> field, as you can see in the JSON response above, The service will keep the webhook active as long as the webhook url is capable of receiving data from the service. If the url fails <strong>5</strong> times the webhook will be set to inactive (<code>active: false</code>) and the service will stop to send data to this webhook.</p>
      <p>Reactivating the webhook is done by re-registering it, this will update the <code>active</code> status to true.</p>
      <aside class="info">
      <b>Tip!</b> Re-register your webhook on service start, to make sure it's always active!
      </aside>
      
      ### Viewing your webhooks
      <p>You can always get information about your webhooks from the API. To get ALL of your registered webhooks simply send a <code>GET</code> request to <code>/webhooks</code>, without the endpoint. This will return a JSON array of your webhooks</p>
      <p>To get information about a specific webhook you can make a <code>GET</code> request with the webhook id to <code>/webhooks/WEBHOOK_ID</code>, without the endpoint. This will return the webhook of that id.</p>
      <div class="highlight">
      <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="shell"><span style="display:flex;"><span><span style="color:#75715e"># Get ALL registered Webhooks</span> </span></span><span style="display:flex;"><span>curl <span style="color:#e6db74">'https://api.igdb.com/v4/webhooks/'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Client-ID: Client ID'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Authorization: Bearer access_token'</span> </span></span></code></pre>
      </div>
      
      ### Viewing your webhooks
      <p>You can always get information about your webhooks from the API. To get ALL of your registered webhooks simply send a <code>GET</code> request to <code>/webhooks</code>, without the endpoint. This will return a JSON array of your webhooks</p>
      <p>To get information about a specific webhook you can make a <code>GET</code> request with the webhook id to <code>/webhooks/WEBHOOK_ID</code>, without the endpoint. This will return the webhook of that id.</p>
      <div class="highlight">
      <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="shell"><span style="display:flex;"><span>curl -X DELETE <span style="color:#e6db74">'https://api.igdb.com/v4/webhooks/WEBHOOK_ID'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Client-ID: Client ID'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Authorization: Bearer access_token'</span> </span></span></code></pre>
      </div>
      
      ### Removing a Webhook
      <p>To remove your existing webhook you need to send a <code>DELETE</code> request to <code>/webhooks/WEBHOOK_ID</code>, without the endpoint. The Webhook id is returned during the registration process or can be found with a <code>GET</code> request to <code>/webhooks/</code>.</p>
      <p>The <code>DELETE</code> request will receive the deleted webhook as confirmation.</p>
      <div class="highlight">
      <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="shell"><span style="display:flex;"><span>curl -X POST <span style="color:#e6db74">'https://api.igdb.com/v4/ENDPOINT/webhooks/test/WEBHOOK_ID?entityId=ENTITY_ID'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Client-ID: Client ID'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Authorization: Bearer access_token'</span> </span></span></code></pre>
      
      ### Testing
      <p>To make sure you have everything setup just right we have a test endpoint for the webhook service. This endpoint will send an object of your choosing to your newly created webhook.</p>
      <p>Send a <code>POST</code> request to <code>ENDPOINT/webhooks/test/WEBHOOK_ID?entityId=ENTITY_ID</code>. The entity id is the id of the object from the endpoint you wish to test with, example:</p>
      <p> <code>POST</code> to <code>games/webhooks/test/42?entityId=1337</code>:<br /> This request will send the game object with id 1337 to your webhook url. </p>
      
      ### Handling Webhooks on your end
      <p>When recieveing the webhook message on your end what we expect is to recieve a <code>200 OK</code> back within <strong>15 seconds</strong>. If the endpoint takes longer than 15 seconds to respond the event will be deemed as a failed event, fail 5 times and the webhook will be set to inactive.</p>
      </div>
      <br />
      <hr>
      
      # CORS Proxy
      
      ## CORS
      <p>If you intend to use our API from your website you will encounter an issue with security; namely CORS <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">Cross-Origin Resource Sharing</a>.</p>
      <p>There are security mechanisms in place by all major browsers to stop websites from accessing other domains without getting explicit permission. This is done through HTTP headers. So, for example, amazinggameswebsite.com cannot access api.igdb.com without us explicitly stating in the HTTP headers (Access-Control-Allow-Origin) that they have permission.</p>
      <p>We do not offer the configuration of these headers as a service, so any browser-based javascript and mobile javascript frameworks will not be able to communicate directly with the IGDB API.</p>
      
      ### Workaround
      <p>See the guide for <a href="#proxy">setting up a proxy</a> or set up a proxy using <a href="https://github.com/Rob--W/cors-anywhere">CORS Anywhere</a></p>
      
      ## Proxy
      <p>There are a number of reasons why you may wish to proxy requests to the IGDB API.</p>
      *   To have a backend that keeps track of your Oauth Application Tokens
      *   Caching requests to the API for better performance
      *   Enable application logging to track/debug usage
      *   Enable CORS between the proxy and applications
      
      ### How do I set up a proxy?
      <p>Proxies can be complex, but to get you started we have a simple guide to get you up and running quickly through AWS.</p>
      <p>We have provided a single link that will let you deploy an AWS Api Gateway in your own AWS account that will serve as a proxy. This Stack will also handle your Access Token rotations automatically for you, so you don’t need to think about that.</p>
      <p> <img src="/assets/igdb_simple_proxy_transparent.png" alt="Simple Api Proxy Diagram" /> </p>
      
      ### What will it cost?
      <p> AWS has a <a href="https://aws.amazon.com/api-gateway/pricing/">very generous free-tier</a> for new users and the services used in the provided solution (<a href="https://aws.amazon.com/api-gateway/pricing/">Api Gateway</a>, <a href="https://aws.amazon.com/secretsmanager/pricing/">Secrets Manager</a>, <a href="https://aws.amazon.com/lambda/pricing/">Lambda</a>). Please use the <a href="https://calculator.aws/#/estimate">AWS Pricing Calculator</a> to gauge how much this will cost you before setting up your Stack. </p>
      
      ### Stack Setup
      <p><strong>Prerequisites:</strong> You need to have an AWS account with permissions to deploy CloudFormation stacks.</p>
      1.  Click this [link](https://console.aws.amazon.com/cloudformation/home?region=us-west-2#/stacks/create/review?stackName=simple-igdb-proxy&templateURL=https://api-simple-proxy-bucket.s3.amazonaws.com/api-simple-proxy.yml) to get started.
      2.  Go over the Stack Details
          *   You have to agree to the terms and conditions.
          *   You have to fill in your [Twitch Application Credentials](https://dev.twitch.tv/)
          *   It’s recommended to protect your proxy by enabling Api Keys
          *   **NOTE:** Enabling Caching will come with extra costs as this is NOT covered by the Free-tier
          *   **NOTE:** Enabling CORS will ‘break’ Protobuf responses, some libraries might not work.
      3.  Click Next
      4.  Configure Stack Options - Nothing is required here, you can click Next
      5.  Verify Settings, click the checkbox at the bottom, then click “Create Stack”
      6.  You will now see the “Stack Details” screen, hit the refresh arrow button on the right until your stack name on the left says “UPDATE\_COMPLETE”
      7.  Click on the “Outputs” tab to get the URL to your new proxy.
          *   The “Resources” tab summarises all the services deployed on your account.
          *   The “Template” tab displays the template used for deployment.
      8.  You can now post requests to your URL and it will proxy to our API
          *   If you enabled Api Keys you will need to specify the header `x-api-key` and the key can be found via a link through the “Resources” tab for “ApiDefaultKey”
      <p> <strong>Important Note:</strong> The url generated will end in <code>production</code>, so you will want to post to<br /> <code>​​https://&lt;your-api-gateway-unique-id&gt;.execute-api.us-west-2.amazonaws.com/production/v4/games</code> </p>
      <p> <img src="/assets/simple-proxy-example-request.png" alt="Example Request to Api Proxy" /> </p>
      
      ### What’s next?
      <p>You can do a lot of things via <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started.html">API Gateway</a>.</p>
      <ul>
        <li>You can improve the security of your proxy by creating another sort of <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-integrate-with-cognito.html">Authentication</a>, to prevent others from using up your RPS quota.</li>
        <li>You can also setup your own Domain name and SSL with <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-custom-domains.html">Route53</a></li>
        <li> You can modify the path of the proxy to have it serve as the front-end to your own APIs
        <ul>
          <li>Perform a calculation? <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-with-lambda-integration.html">Lambda Integration</a></li>
          <li>Just want to store some records? <a href="https://aws.amazon.com/blogs/compute/using-amazon-api-gateway-as-a-proxy-for-dynamodb/">DynamoDB Integration</a></li>
          <li>Want users to be able to upload/download files? <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/integrating-api-with-aws-services-s3.html">S3 Integration</a></li>
        </ul> </li>
        <li>Enable request <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/security-monitoring.html">logging</a></li>
      </ul>
      
      ### Alternatives
      <ul>
        <li>CORS: Setup a proxy using <a href="https://github.com/Rob--W/cors-anywhere">CORS Anywhere</a></li>
      </ul>
      <br />
      <hr>
      
      # Reference
      
      ## Images
      <aside class="info">
        <b>Note:</b> Images that are removed or replaced from IGDB.com exist for
        <b>30 days</b> before they are removed. Keep that in mind when designing cache logic.
      </aside>
      
      ### Examples
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields screenshots.*;<br /> where id = 1942; </code> </li>
        </ul> </li>
      </ul>
      <p>Here we retrieve the image properties of the game with the id “1942”</p>
      <div class="highlight">
        <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="json"><span style="display:flex;"><span>[{ </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;</span>: <span style="color:#ae81ff">1942</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;screenshots&quot;</span>: [{ </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;</span>: <span style="color:#ae81ff">9742</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;game&quot;</span>: <span style="color:#ae81ff">1942</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;height&quot;</span>: <span style="color:#ae81ff">1080</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;image_id&quot;</span>: <span style="color:#e6db74">&quot;mnljdjtrh44x4snmierh&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;url&quot;</span>: <span style="color:#e6db74">&quot;//images.igdb.com/igdb/image/upload/t_thumb/mnljdjtrh44x4snmierh.jpg&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;width&quot;</span>: <span style="color:#ae81ff">1920</span> </span></span><span style="display:flex;"><span> }, </span></span><span style="display:flex;"><span> { </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;</span>: <span style="color:#ae81ff">9743</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;game&quot;</span>: <span style="color:#ae81ff">1942</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;height&quot;</span>: <span style="color:#ae81ff">1080</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;image_id&quot;</span>: <span style="color:#e6db74">&quot;em1y2ugcwy2myuhvb9db&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;url&quot;</span>: <span style="color:#e6db74">&quot;//images.igdb.com/igdb/image/upload/t_thumb/em1y2ugcwy2myuhvb9db.jpg&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;width&quot;</span>: <span style="color:#ae81ff">1920</span> </span></span><span style="display:flex;"><span> } </span></span><span style="display:flex;"><span> ] </span></span><span style="display:flex;"><span>}] </span></span></code></pre>
      </div>
      <p><strong>Image url structure:</strong></p>
      <p><code>https://images.igdb.com/igdb/image/upload/t_screenshot_med_2x/dfgkfivjrhcksyymh9vw.jpg</code></p>
      <p><strong>Break down:</strong></p>
      <p><code>https://images.igdb.com/igdb/image/upload/t_{size}/{hash}.jpg</code></p>
      <p><code>size</code> is one of the interchangeable size types listed below. <code>hash</code> is the id of the image. The image sizes are all maximum size but by appending <code>_2x</code> to any size, you can get retina (DPR 2.0) sizes (<code>cover_small_2x</code>).</p>
      
      <table>
          <tr>
              <td>Name</td>
              <td>Size</td>
              <td>Extra</td>
              <td></td>
          </tr>
          <tr>
              <td>cover\_small</td>
              <td>90 x 128</td>
              <td>Fit</td>
              <td></td>
          </tr>
          <tr>
              <td>screenshot\_med</td>
              <td>569 x 320</td>
              <td>Lfill, Center gravity</td>
              <td></td>
          </tr>
          <tr>
              <td>cover\_big</td>
              <td>264 x 374</td>
              <td>Fit</td>
              <td></td>
          </tr>
          <tr>
              <td>logo\_med</td>
              <td>284 x 160</td>
              <td>Fit</td>
              <td></td>
          </tr>
          <tr>
              <td>screenshot\_big</td>
              <td>889 x 500</td>
              <td>Lfill, Center gravity</td>
              <td></td>
          </tr>
          <tr>
              <td>screenshot\_huge</td>
              <td>1280 x 720</td>
              <td>Lfill, Center gravity</td>
              <td></td>
          </tr>
          <tr>
              <td>thumb</td>
              <td>90 x 90</td>
              <td>Thumb, Center gravity</td>
              <td></td>
          </tr>
          <tr>
              <td></td>
              <td>micro</td>
              <td>35 x 35</td>
              <td>Thumb, Center gravity</td>
          </tr>
          <tr>
              <td></td>
              <td>720p</td>
              <td>1280 x 720</td>
              <td>Fit, Center gravity</td>
          </tr>
          <tr>
              <td></td>
              <td>1080p</td>
              <td>1920 x 1080</td>
              <td>Fit, Center gravity</td>
          </tr>
      </table>
      
      ## Fields
      
      ### What?
      <p>Fields are properties of an entity. For example, a Game field would be <code>genres</code> or <code>release_dates</code>. Some fields have properties of their own, for example, the <code>genres</code> field has the property <code>name</code>.</p>
      
      ### Where?
      <p>Fields can be used on any entity that has sub-properties such as Games, Companies, People etc.</p>
      
      ### How?
      <p>Fields are requested in a comma separated list. For example, to get some information for some Games, Genres, Themes or anything else, you could request it like this:</p>
      <p><strong>Apicalypse</strong></p>
      <p> <code>where id = (4356,189,444);</code><br /> <code>fields name,release_dates,genres.name,rating</code> </p>
      <p><strong>Legacy Parameters</strong></p>
      <p><code>/games/4356,189,444?fields=name,release_dates,genres.name,rating</code></p>
      <p>Note in Apicalypse the <code>name</code> property of <code>genres</code> can be accessed directly with a dot (genres.name).</p>
      <p>A full list of fields can be obtained by passing a <code>*</code> as a field. Alternatively you can use the <code>meta</code> postfix: <code>/games/meta</code> to get a list of all fields.</p>
      
      ### Shorthand
      <p>Another way of writing fields is to use the shorthand <strong>f</strong> which achieves the same result.</p>
      <p> <code>f name,release_dates,genres.name,rating;</code><br /> <code>w id = (4356,189,444);</code> </p>
      
      ## Exclude
      
      ### What?
      <p>Exclude is a complement to the regular fields which allows you to request all fields with the exception of any numbers of fields specified with exclude.</p>
      
      ### How?
      <p>Fields to be excluded are specified as a comma separated list. For example, to get all fields excpect for screenshots, you could request it like this:</p>
      <p><strong>Apicalypse</strong></p>
      <p> <code>fields *;</code><br /> <code>exclude screenshots;</code> </p>
      
      ### Shorthand
      <p>Another way of writing exclude is to use the shorthand <strong>x</strong> which achieves the same result.</p>
      <p> <code>f *;</code><br /> <code>x screenshots;</code> </p>
      
      ## Expander
      
      ### What?
      <p>Some fields are actually ids pointing to another endpoint. The expander feature is a convenient way to go into these other endpoints and access more information from them in the same query, instead of having to do multiple queries.</p>
      
      ### Where?
      <p>Expands are specificed among the regular fields in the body of the query.</p>
      
      ### How?
      <p>Fields can be expanded with a dot followed by the fields you want to access from a certain endpoint.</p>
      
      ### Examples
      <p>In the example below we request the fields name and genres for the game The Witcher 3 with id 1942.</p>
      <p> <code>fields name,genres;</code><br /> <code>where id = 1942;</code> </p>
      <p>But this query will only return ids for the genres, which can be seen in the first response to the right:</p>
      <div class="highlight">
        <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="json"><span style="display:flex;"><span><span style="color:#e6db74">&quot;First example response showing genre ids&quot;</span> </span></span><span style="display:flex;"><span>[ </span></span><span style="display:flex;"><span> { </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id &quot;</span>: <span style="color:#ae81ff">1942</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;genres&quot;</span>:[ </span></span><span style="display:flex;"><span> <span style="color:#ae81ff">12</span>, </span></span><span style="display:flex;"><span> <span style="color:#ae81ff">31</span> </span></span><span style="display:flex;"><span> ], </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;name&quot;</span>: <span style="color:#e6db74">&quot;The Witcher 3: Wild Hunt&quot;</span> </span></span><span style="display:flex;"><span> } </span></span><span style="display:flex;"><span>] </span></span></code></pre>
      </div>
      <p>For some use cases the id is all that is needed, but other times more data is needed, This is when the expander features comes in handy.</p>
      <p> <code>fields name,genres.name;</code><br /> <code>where id = 1942;</code> </p>
      <p>This example with expander retrieves the name of each genre which can be seen in the second response to the right.</p>
      <div class="highlight">
        <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="json"><span style="display:flex;"><span><span style="color:#e6db74">&quot;Second example response showing genre ids and name&quot;</span> </span></span><span style="display:flex;"><span>[ </span></span><span style="display:flex;"><span> { </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;</span>: <span style="color:#ae81ff">1942</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;genres&quot;</span>: [ </span></span><span style="display:flex;"><span> { </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;</span>: <span style="color:#ae81ff">12</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;name&quot;</span>: <span style="color:#e6db74">&quot;Role-playing (RPG)&quot;</span> </span></span><span style="display:flex;"><span> }, </span></span><span style="display:flex;"><span> { </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;</span>: <span style="color:#ae81ff">31</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;name&quot;</span>: <span style="color:#e6db74">&quot;Adventure&quot;</span> </span></span><span style="display:flex;"><span> } </span></span><span style="display:flex;"><span> ], </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;name&quot;</span>: <span style="color:#e6db74">&quot;The Witcher 3: Wild Hunt&quot;</span> </span></span><span style="display:flex;"><span> } </span></span><span style="display:flex;"><span>] </span></span></code></pre>
      </div>
      <p>And lastly lets take a look at how you can use a wildcard character <strong>*</strong> to retrieve all data from genres in the previous example.</p>
      <p> <code>fields name,genres.*;</code><br /> <code>where id = 1942;</code> </p>
      <p>See the third response to the right where all available data for each genre is included in the response.</p>
      <div class="highlight">
        <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="json"><span style="display:flex;"><span><span style="color:#e6db74">&quot;Third example response showing all available genre data&quot;</span> </span></span><span style="display:flex;"><span>[ </span></span><span style="display:flex;"><span> { </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;</span>: <span style="color:#ae81ff">1942</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;genres&quot;</span>: [ </span></span><span style="display:flex;"><span> { </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;</span>: <span style="color:#ae81ff">12</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;created_at&quot;</span>: <span style="color:#ae81ff">1297555200</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;name&quot;</span>: <span style="color:#e6db74">&quot;Role-playing (RPG)&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;slug&quot;</span>: <span style="color:#e6db74">&quot;role-playing-rpg&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;updated_at&quot;</span>: <span style="color:#ae81ff">1323216000</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;url&quot;</span>: <span style="color:#e6db74">&quot;https://www.igdb.com/genres/role-playing-rpg&quot;</span> </span></span><span style="display:flex;"><span> }, </span></span><span style="display:flex;"><span> { </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;</span>: <span style="color:#ae81ff">31</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;created_at&quot;</span>: <span style="color:#ae81ff">1323561600</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;name&quot;</span>: <span style="color:#e6db74">&quot;Adventure&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;slug&quot;</span>: <span style="color:#e6db74">&quot;adventure&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;updated_at&quot;</span>: <span style="color:#ae81ff">1323561600</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;url&quot;</span>: <span style="color:#e6db74">&quot;https://www.igdb.com/genres/adventure&quot;</span> </span></span><span style="display:flex;"><span> } </span></span><span style="display:flex;"><span> ], </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;name&quot;</span>: <span style="color:#e6db74">&quot;The Witcher 3: Wild Hunt&quot;</span> </span></span><span style="display:flex;"><span> } </span></span><span style="display:flex;"><span>] </span></span></code></pre>
      </div>
      
      ## Filters
      
      ### What?
      <p>Filters are used to sift through results to get what you want. You can exclude and include results based on their properties. For example you could remove all Games where the <code>rating</code> was below 80 (<code>where rating &gt;= 80</code>).</p>
      
      ### How?
      <p>Filters are parameter arrays so must be added using special keys like this:</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>search “zelda”;<br /> where rating &gt;= 80 &amp; release_dates.date &gt; 631152000; </code> </li>
        </ul> </li>
      </ul>
      
      ### Where?
      <p>Filters can be used on any entity that has sub-properties such as Games, Companies, People etc.</p>
      
      ### Available Postfixes
      <ul>
        <li><code>=</code> Equal: Exact match equal.</li>
        <li><code>!=</code> Not Equal: Exact match equal.</li>
        <li><code>&gt;</code> Greater than (works only on numbers).</li>
        <li><code>&gt;=</code> Greater than or equal to (works only on numbers).</li>
        <li><code>&lt;</code> Less than (works only on numbers).</li>
        <li><code>&lt;=</code> Less than or equal to (works only on numbers).</li>
        <li><code>= &quot;Your input string&quot;*</code> Prefix: Exact match on the beginning of the string, can end with anything. (Case sensitive).</li>
        <li><code>~ &quot;Your input string&quot;*</code> Prefix: Exact match on the beginning of the string, can end with anything. (Case insensitive).</li>
        <li><code>= *&quot;Your input string&quot;</code> Postfix: Exact match at the end of the string, can start with anything. (Case sensitive).</li>
        <li><code>~ *&quot;Your input string&quot;</code> Postfix: Exact match at the end of the string, can start with anything. (Case insensitive).</li>
        <li><code>= *&quot;Your input string&quot;*</code> Infix Exact match in the middle of the string, can start and end with anything. (Case sensitive).</li>
        <li><code>~ *&quot;Your input string&quot;*</code> Infix Exact match in the middle of the string, can start and end with anything. (Case insensitive).</li>
        <li><code>!= null</code> The value is not null.</li>
        <li><code>= null</code> The value is null.</li>
        <li><code>[V1,V2,...Vn]</code> The value exists within the (comma separated) array (AND between values).</li>
        <li><code>![V1,V2,...Vn]</code> The values must not exist within the (comma separated) array (AND between values).</li>
        <li><code>(V1,V2,...Vn)</code> The value has any within the (comma separated) array (OR between values).</li>
        <li><code>!(V1,V2,...Vn)</code> The values must not exist within the (comma separated) array (OR between values).</li>
        <li><code>{V1,V2,...V2}</code> Exact match on arrays. (Does not work on ids, strings, etc).</li>
      </ul>
      
      ### Examples
      <p><strong>Filter by multiple platforms</strong></p>
      <p>To get games that are released on PS4 OR XBOX ONE OR PC</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields name;<br /> where release_dates.platform = (48,49,6); </code> </li>
        </ul> </li>
      </ul>
      <p>Similarly if you want games released on PS4 AND XBOX ONE AND PC</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields name;<br /> where release_dates.platform = [48,49,6]; </code> </li>
        </ul> </li>
      </ul>
      <p>If you want games released only on PC</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields name;<br /> where release_dates.platform = 6; </code> </li>
        </ul> </li>
      </ul>
      <p>And if you want games released for PC OR any other platform</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields name;<br /> where release_dates.platform = (6); </code> </li>
        </ul> </li>
      </ul>
      
      ### Combining Multiple Filters
      <p>It is possible to to use logical operators between filters, which could look something like this:</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields name,platforms,genres.name;<br /> where (platforms = [6,48] &amp; genres = 13) | (platforms = [130,48] &amp; genres = 12); </code> </li>
        </ul> </li>
      </ul>
      <p>The response from this example query will be games that fulfil one or both of two sets or requirements:</p>
      <ul>
        <li>Games released for for both PC (6), and PS4 (48) and also has the genre simulator (13).</li>
        <li>Games released for for both Switch (130), and PS4 (48) and also has the genre Role-Playing (13).</li>
      </ul>
      
      ### Prefix, Postfix and Infix
      <p><strong>Prefix</strong></p>
      <p>Filtering for game names beginning with “Super” (this will return games such as for example Super Mario World)</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields name;<br /> where name = &quot;Super&quot;*; </code> </li>
        </ul> </li>
      </ul>
      <p><strong>Postfix</strong></p>
      <p>Filtering for game names ending with with “World” (this will also return games such as for example Super Mario World)</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields name;<br /> where name = *&quot;World&quot;; </code> </li>
        </ul> </li>
      </ul>
      <p><strong>Infix</strong></p>
      <p>Filtering for game names containing the string “Smash” anywhere (this will return games such as for example Super Smash Bros)</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields name;<br /> where name = *&quot;Smash&quot;*; </code> </li>
        </ul> </li>
      </ul>
      <p><strong>case insensitive version</strong></p>
      <p>Filtering for game names containing the string “Smash” (this will return games such as for example Super Smash Bros)</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields name;<br /> where name ~ *&quot;Smash&quot;*; </code> </li>
        </ul> </li>
      </ul>
      
      ### Removing erotic games from API responses
      <p>Some queries may return games with erotic themes. All erotic games in the database has the theme ’erotic’ (id = 42). So by adding a simple filter like the one below you can remove them from your responses.</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields name;<br /> where themes != (42); </code> </li>
        </ul> </li>
      </ul>
      
      ## Sorting
      
      ### What?
      <p>Sorting is used to order results by a specific field.</p>
      
      ### How?
      <p>You can order results like this:</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>sort release_dates.date desc; <br /> where rating &gt;= 80;<br /> </code> </li>
        </ul> </li>
      </ul>
      <p>Notice the appended <code>:desc</code> (descending) which could also be <code>:asc</code> (ascending) if required.</p>
      <p><strong>Order by rating</strong></p>
      <p>Rating parameter for games. You can access it like this:</p>
      <ul>
        <li> Address:
        <ul>
          <li><code> https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>fields name,rating; <br /> sort rating desc; <br /> where rating != null; </code> </li>
        </ul> </li>
      </ul>
      
      ### Where?
      <p>Ordering can be used on any entity.</p>
      
      ## Search
      
      ### What?
      <p>Search based on name, results are sorted by similarity to the given search string.</p>
      
      ### Where?
      <p>Searchable endpoints:</p>
      <ul>
        <li>Characters</li>
        <li>Collections</li>
        <li>Games</li>
        <li>People</li>
        <li>Platforms</li>
        <li>Themes</li>
      </ul>
      
      ### How?
      <p>You specify which endpoint to search through in the Address field of your request. The search string is then entered in the body of the request by typing <code>search</code>, blank space followed by the string you wish to search for.</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li><code>search “zelda”;</code></li>
        </ul> </li>
      </ul>
      
      ## Pagination
      <p>Here is an example for how to use <strong>limit</strong>. The default limit is 10. The maximum value you can set for limit is 500.</p>
      <ul>
        <li> <p>Address:</p>
        <ul>
          <li><code>https://api.igdb.com/v4/platforms/</code></li>
        </ul> </li>
        <li> <p>Body:</p>
        <ul>
          <li><code>limit 33;</code></li>
        </ul> </li>
      </ul>
      <p>There is also an <strong>offset</strong>. This will start the list at position 22 and give 33 results.</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/platforms/</code></li>
        </ul> 30px </li>
        <li> Body:
        <ul>
          <li> <code>limit 33; <br /> offset 22; </code> </li>
        </ul> </li>
      </ul>
      <br />
      <hr>
      
      ## Protocol Buffers
      <p> <a href="https://developers.google.com/protocol-buffers">Google Protocol Buffers</a> is a language neutral method for serializing structured data.<br /> The IGDB API supports responses in this format so you do not have to write your own serialization libraries, but instead you could just generate one.<br /> Since this is langage neutral it is supported by a variatey of languages. </p>
      
      ### How?
      <p> Generate the objects in your language of choise with our own Protobuf file, <a href="https://api.igdb.com/v4/igdbapi.proto">here</a><br /> This file contains the mapping of the entire IGDB API and can be used to generate wrappers, code and tooling in any programming language.<br /> The protobuf file is created in accordance with the <a href="https://developers.google.com/protocol-buffers/docs/proto3">proto3 specification</a> </p>
      <p>There are plenty of examples on how to do this Online and on the <a href="https://developers.google.com/protocol-buffers/docs/tutorials">Protobuf Site</a>.</p>
      
      ### Where?
      <p> To start recieving protobuf compatible responses from then api all you need to do is add <code>.pb</code> at the end of your request:<br /> <code>https://api.igdb.com/v4/games.pb</code><br /> Then use your generated files to parse the response into the expected object. </p>
      <br />
      <hr>
      
      ## Tag Numbers
      <p>Tag numbers are automatically generated numbers which provide a compact and fast way to do complex filtering on the IGDB API. The number calculation can be easily achieved with any programming language.</p>
      <p>The basis of the calculation is a 32bit integer, where the first 4 bits contain the object type ID, and the remaining 28 bits represent the ID of the object we are generating the tag number for.</p>
      <p>Using this method a flat index of custom object ‘hashes’ can be maintained in which index the search and filtering is faster than using conventional methods.</p>
      <p>Currently the following object types use tags:</p>
      <table>
        <thead>
        <tr>
          <th>Type ID</th>
          <th style="text-align: center">Name</th>
        </tr>
        </thead>
        <tbody>
        <tr>
          <td>0</td>
          <td style="text-align: center">Theme</td>
        </tr>
        <tr>
          <td>1</td>
          <td style="text-align: center">Genre</td>
        </tr>
        <tr>
          <td>2</td>
          <td style="text-align: center">Keyword</td>
        </tr>
        <tr>
          <td>3</td>
          <td style="text-align: center">Game</td>
        </tr>
        <tr>
          <td>4</td>
          <td style="text-align: center">Player Perspective</td>
        </tr>
        </tbody>
      </table>
      <p>Let’s see two examples for tag number calculation.</p>
      <div class="highlight">
        <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#75715e">// Javascript </span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">const</span> <span style="color:#a6e22e">genreTypeID</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">1</span>; <span style="color:#75715e">// The type ID from the table above </span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">const</span> <span style="color:#a6e22e">shooterGenreID</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">5</span>; <span style="color:#75715e">// The Shooter genre's ID, coming from the genres endpoint. </span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">let</span> <span style="color:#a6e22e">tagNumber</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">genreTypeID</span> <span style="color:#f92672">&lt;&lt;</span> <span style="color:#ae81ff">28</span>; <span style="color:#75715e">// Bit-shifting the genre's type ID by 28 bits, ensuring that it will get into the first four bits. The result will be 268435456 </span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">tagNumber</span> <span style="color:#f92672">|=</span> <span style="color:#a6e22e">shooterGenreID</span>; <span style="color:#75715e">// Adding the Shooter genre ID to the tag number with a bitwise OR operation. The result will be 268435461. </span></span></span></code></pre>
      </div>
      <p>We try to find all the games which relate to the Shooter genre. The tag number generation in Javascript would look something like the example on the right.</p>
      <p>Javascript example query:</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul></li>
        <li> Body:
        <ul>
          <li><code>where tags = (268435461);<br /></code></li>
        </ul></li>
      </ul>
      <div class="highlight">
        <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#75715e"># Python</span> </span></span><span style="display:flex;"><span>keywordTypeID: <span style="color:#ae81ff">2</span> <span style="color:#75715e"># The keyword's type ID from the table above/</span> </span></span><span style="display:flex;"><span>keywordID: <span style="color:#ae81ff">148</span> <span style="color:#75715e"># The ID of the 'moba' keyword</span> </span></span><span style="display:flex;"><span>tagNumber: keywordTypeID <span style="color:#f92672">&lt;&lt;</span> <span style="color:#ae81ff">28</span> <span style="color:#75715e"># Bit-shifting the keywords's type ID by 28 bits, ensuring that it will get into the first four bits. The result will be 536870912</span> </span></span><span style="display:flex;"><span>tagNumber <span style="color:#f92672">|=</span> keywordID <span style="color:#75715e"># Adding the keyword ID to the tag number with a bitwise OR operation. The result will be 536871060.</span> </span></span></code></pre>
      </div>
      <p>Python example query:</p>
      <ul>
        <li> Address:
        <ul>
          <li><code>https://api.igdb.com/v4/games/</code></li>
        </ul> </li>
        <li> Body:
        <ul>
          <li> <code>where tags = (536871060);<br /> </code> </li>
        </ul> </li>
      </ul>
      </div>
      <br />
      <hr>
      
      ## Multi-Query
      <p>Multi-Query is a new way to request a huge amount of information in one request! With Multi-Query you can request multiple endpoints at once, it also works with multiple requests to a single endpoint as well.</p>
      <p>A Multi-Query is made by making a <code>POST</code> request to: <code>https://api.igdb.com/v4/multiquery</code>.</p>
      <div>
        <p><strong>Syntax Structure</strong> The Multi-Query syntax is made up of three pieces; “Endpoint name”, “Result Name (Given by you)”, and the APICalypse query inside the body {}.</p>
        <p><strong>important</strong> You can only run a maximum of 10 queries.</p>
        
      ### Example 1:
      <p>Get the count of platforms in the api.</p>
      <pre tabindex="0"><code>query platforms/count &quot;Count of Platforms&quot; {
      // here we can have additional filters
      };</code></pre>
      <p>This above query will give us the following result:</p>
      <pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>[
      </span></span><span style="display:flex;"><span>  {
      </span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;Count of Platforms&#34;</span>,
      </span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;count&#34;</span>: <span style="color:#ae81ff">155</span>
      </span></span><span style="display:flex;"><span>  }
      </span></span><span style="display:flex;"><span>]
      </span></span></code></pre>
      </div>
         
      ### Example 2:
      <p>Get Playstation 4 Exclusives</p>
      <pre tabindex="0"><code>query games &quot;Playstation Games&quot; {
        fields name,platforms.name;
        where platforms !=n &amp; platforms = {48};
        limit 1;
      };</code></pre>
      <p>This above query will give us the following result:</p>
      <pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JSON" data-lang="JSON"><span style="display:flex;"><span>[
      </span></span><span style="display:flex;"><span>    {
      </span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;Playstation Games&#34;</span>,
      </span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;result&#34;</span>: [
      </span></span><span style="display:flex;"><span>            {
      </span></span><span style="display:flex;"><span>                <span style="color:#f92672">&#34;id&#34;</span>: <span style="color:#ae81ff">52826</span>,
      </span></span><span style="display:flex;"><span>                <span style="color:#f92672">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;Skate 4&#34;</span>,
      </span></span><span style="display:flex;"><span>                <span style="color:#f92672">&#34;platforms&#34;</span>: [
      </span></span><span style="display:flex;"><span>                    {
      </span></span><span style="display:flex;"><span>                        <span style="color:#f92672">&#34;id&#34;</span>: <span style="color:#ae81ff">48</span>,
      </span></span><span style="display:flex;"><span>                        <span style="color:#f92672">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;PlayStation 4&#34;</span>
      </span></span><span style="display:flex;"><span>                    }
      </span></span><span style="display:flex;"><span>                ]
      </span></span><span style="display:flex;"><span>            }
      </span></span><span style="display:flex;"><span>        ]
      </span></span><span style="display:flex;"><span>    }
      </span></span><span style="display:flex;"><span>]
      </span></span></code></pre>
         
      ### Example 3:
      <p>Combining the queries of example 1 and 2.</p>
      <pre tabindex="0"><code>query platforms/count &#34;Count of Platforms&#34; {
        // here we can ahve additional filters
      };

      query games &#34;Playstation Games&#34; {
        fields name,platforms.name;
        where platforms !=n &amp; platforms = {48};
        limit 1;
      };
      </code></pre><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-JSON" data-lang="JSON"><span style="display:flex;"><span>[
      </span></span><span style="display:flex;"><span>    {
      </span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;Count of Platforms&#34;</span>,
      </span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;count&#34;</span>: <span style="color:#ae81ff">155</span>
      </span></span><span style="display:flex;"><span>    },
      </span></span><span style="display:flex;"><span>    {
      </span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;Playstation Games&#34;</span>,
      </span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;result&#34;</span>: [
      </span></span><span style="display:flex;"><span>            {
      </span></span><span style="display:flex;"><span>                <span style="color:#f92672">&#34;id&#34;</span>: <span style="color:#ae81ff">52826</span>,
      </span></span><span style="display:flex;"><span>                <span style="color:#f92672">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;Skate 4&#34;</span>,
      </span></span><span style="display:flex;"><span>                <span style="color:#f92672">&#34;platforms&#34;</span>: [
      </span></span><span style="display:flex;"><span>                    {
      </span></span><span style="display:flex;"><span>                        <span style="color:#f92672">&#34;id&#34;</span>: <span style="color:#ae81ff">48</span>,
      </span></span><span style="display:flex;"><span>                        <span style="color:#f92672">&#34;name&#34;</span>: <span style="color:#e6db74">&#34;PlayStation 4&#34;</span>
      </span></span><span style="display:flex;"><span>                    }
      </span></span><span style="display:flex;"><span>                ]
      </span></span><span style="display:flex;"><span>            }
      </span></span><span style="display:flex;"><span>        ]
      </span></span><span style="display:flex;"><span>    }
      </span></span><span style="display:flex;"><span>]
      </span></span></code></pre>
        </div>
       </div>
       <br />
       <hr>
       
      ## APICalypse
       
      ### APICalypse cheatsheet
      <p>APICalypse is a new language used for this api which greatly simplifies how you can query your requests compared to the url parameters used in API V2.</p>
      
      ### Fields
      <p>Fields are used to select which fields you want back from your request to the api.</p>
      <p>To select fields you need the APICalypse command <code>fields</code> or its shorthand <code>f</code>.</p>
      <p>Popular wildcard is to add <code>*</code> instead of a field, this will give you all of the fields.</p>
      <p> <code>fields name,release_dates,genres.name,rating;</code><br /> <code>f name,release_dates,genres.name,rating;</code> </p>
      
      ### Exclude
      <p>Commonly used with selecting all fields with the wildcard <code>*</code> this command will exclude the fields that you select.</p>
      <p>To exclude fields you don’t need the APICalypse command <code>exclude</code> or its shorthand <code>x</code>.</p>
      <p> <code>fields *;</code><br /> <code>exclude tags,keywords;</code> </p>
      <p> <code>f *;</code><br /> <code>x tags,keywords;</code> </p>
      
      ### Where
      <p>Where is easiest described as a filter. With where you can filter on specific fields.</p>
      <p>To filter your results use the APICalypse command <code>where</code> or its shorthand <code>w</code>.</p>
      <p> <code>fields *;</code><br /> <code>where genres = 4;</code> </p>
      <p> <code>f *;</code><br /> <code>w genres = 4;</code> </p>
      
      ### Limit
      <p>Limit describes how many results you will get back from the api, the standard value is 10.</p>
      <p>To set a new limit use the APICalypse command <code>limit</code> or it’s shorthand <code>l</code>.</p>
      <p> <code>fields *;</code><br /> <code>limit 50;</code> </p>
      <p> <code>f *;</code><br /> <code>l 50;</code> </p>
      
      ### Offset
      <p>Offset describes how many results you will skip over, standard is 0.</p>
      <p> To set a new offset use the APICalypse command <code>offset</code> or it’s shorthand <code>o</code>.<br /> Offset is often used together with Limit for pagination. </p>
      <p> <code>limit 50;</code><br /> <code>offset 50;</code> </p>
      <p> <code>l 50;</code><br /> <code>o 50;</code> </p>
      
      ### Sort
      <p>Use Sort to order the results to your liking.</p>
      <p> To order the results use the APICalypse command <code>sort</code> or it’s shorthand <code>s</code>.<br /> Sort has two accompaning commands for “direction”; <code>asc</code> Ascending order and <code>desc</code> Decending order. </p>
      <p> <code>fields *;</code><br /> <code>sort rating asc;</code> </p>
      <p> <code>f *;</code><br /> <code>s rating desc;</code> </p>
      
      ### Search
      <p>To find a specific title you can use Search.</p>
      <p>To use search use the APICalypse command <code>search</code>, it has no shorthand :(. Search has it’s own endpoint where it is good to use a filter for specific kinds of results, example <code>where game != null;</code> for only games.</p>
      <p> <code>search &quot;Halo&quot;;</code><br /> <code>fields name;</code> </p>
      <p> <code>search &quot;Halo&quot;;</code><br /> <code>f name;</code> </p>
      
      ### Other shorts
      <p>Null can be written <code>null</code> or <code>n</code>. Booleans can be written as <code>true</code> or <code>t</code> and <code>false</code> or <code>f</code></p>
       
       <br />
       <hr>
       
      # Partnership
      <p>Interested about using the API for a commercial project? No problem, we allow commercial usage. Get in touch with us about our partner program!</p>
      
      ### How?
      <p>To register for a commertial agreement reach out to <a href="mailto:partner@igdb.com">partner@igdb.com</a></p>
      
      ### Exclusive Features
      <p> Automatic data dumps every 24 hours.<br /> <em>More features coming soon.</em> </p>
      
      ## Data Dumps
      <p>All <a href="#tag--Endpoints">endpoints</a> are available as CSV Data Dumps!</p>
      <p>Daily updated CSV Data Dumps which can be used to kick start your projects or keep your data up to date (within 24 hours).</p>
      <aside class="info">
        <i>Please note that data dumps are exclusively available to our Data Partners.</i>
      </aside>
      <div class="highlight">
        <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="shell"><span style="display:flex;"><span>curl -X GET <span style="color:#e6db74">'https://api.igdb.com/v4/dumps'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Client-ID: Client ID'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Authorization: Bearer access_token'</span> </span></span></code></pre>
      </div>
      
      ### Listing dumps
      <p> To list the available data dumps make a GET request to <code>/dumps</code>.<br /> This will return a list of available Data Dumps describing the <code>endpoint</code>, <code>file name</code>, and <code>updated at</code>. </p>
      <div class="highlight">
        <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="yaml"><span style="display:flex;"><span><span style="color:#75715e"># Example response from /dumps</span> </span></span><span style="display:flex;"><span>[ </span></span><span style="display:flex;"><span> { </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;endpoint&quot;: </span><span style="color:#e6db74">&quot;games&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;file_name&quot;: </span><span style="color:#e6db74">&quot;1234567890_games.csv&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;updated_at&quot;: </span><span style="color:#ae81ff">1234567890</span> </span></span><span style="display:flex;"><span> } </span></span><span style="display:flex;"><span>] </span></span></code></pre>
      </div>
      <div class="highlight">
        <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="shell"><span style="display:flex;"><span>curl -X GET <span style="color:#e6db74">'https://api.igdb.com/v4/dumps/ENDPOINT'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Client-ID: Client ID'</span> <span style="color:#ae81ff">\ </span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>-H <span style="color:#e6db74">'Authorization: Bearer access_token'</span> </span></span></code></pre>
      </div>
      
      ### Downloading CSV
      <p>To get the download link for the csv files make a GET request to <code>/dumps/ENDPOINT</code> The response object will contain the download link for the CSV and the schema version &amp; schema JSON structure of the data.</p>
      <p> <strong>S3 Download Url:</strong><br /> The download Url is a presigned S3 url that is valid for 5 minutes. </p>
      <p> <strong>Schema</strong><br /> The <code>schema_version</code> and <code>schema</code> will reflect the current data structure and data type that the Dump is using.<br /> The schema version number will change when the <code>schema</code> changes, so if you are planning on an automated setup for this you will need to keep this in mind. </p>
      <div class="highlight">
        <pre tabindex="0" style="color: #f8f8f2; background-color: #272822; -moz-tab-size: 4; -o-tab-size: 4; tab-size: 4"><code data-lang="yaml"><span style="display:flex;"><span><span style="color:#75715e"># Example response from /dumps/games</span> </span></span><span style="display:flex;"><span>{ </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;s3_url&quot;: </span><span style="color:#e6db74">&quot;S3_DOWNLOAD_URL&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;endpoint&quot;: </span><span style="color:#e6db74">&quot;games&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;file_name&quot;: </span><span style="color:#e6db74">&quot;1234567890_games.csv&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;size_bytes&quot;: </span><span style="color:#ae81ff">123456789</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;updated_at&quot;: </span><span style="color:#ae81ff">1234567890</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;schema_version&quot;: </span><span style="color:#e6db74">&quot;1234567890&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;schema&quot;: </span>{ </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;id&quot;: </span><span style="color:#e6db74">&quot;LONG&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;name&quot;: </span><span style="color:#e6db74">&quot;STRING&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;url&quot;: </span><span style="color:#e6db74">&quot;STRING&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;franchises&quot;: </span><span style="color:#e6db74">&quot;LONG[]&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;rating&quot;: </span><span style="color:#e6db74">&quot;DOUBLE&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;created_at&quot;: </span><span style="color:#e6db74">&quot;TIMESTAMP&quot;</span>, </span></span><span style="display:flex;"><span> <span style="color:#f92672">&quot;checksum&quot;: </span><span style="color:#e6db74">&quot;UUID&quot;</span>, </span></span><span style="display:flex;"><span> } </span></span><span style="display:flex;"><span>} </span></span></code></pre>
      </div>
      <br />
      <hr>
      
      # FAQ
      
      ## Business related FAQ
      
      ### 1. I want to use the API for a commercial project, is it allowed?
      <p>Yes, we offer commercial partnerships for users looking to integrate the API in monetized products. From our side, as part of the partnership, we ask for user facing attribution to IGDB.com from products integrating the IGDB API.</p>
      <p>For more details on that process, please reach out to <a href="mailto:partner@igdb.com">partner@igdb.com</a></p>
      
      ### 2. What is the price of the API?
      <p>The API is free for both non-commercial and commercial projects.</p>
      
      ### 3. Am I allowed to store/cache the data locally?
      <p>Yes. In fact, we prefer if you store and serve the data to your end users. You remain in control over your user experience, while alleviating pressure on the API itself.</p>
      
      ### 4. Regarding user facing attribution (relating to the commercial partnership), any specific guidelines?
      <p>Not really. We expect fair attribution, i.e. attribution that is visible to your users and located in a static location (e.g. not in a change log).</p>
      
      ### 5. What happens with the data retrieved, in the case of partnership termination?
      <p>You are allowed to keep all data you retrieve from the API and we will not ask you to remove the data in case of partnership termination.</p>
      
      ### 6. We don’t wish to attribute IGDB.com as part of the partnership. Are there any other way?
      <p>Yes. If you have data that we think will complete the overall IGDB data set and you are willing to share that data with us, we can opt for this approach instead. Please be aware, however, that we are only interested in publicly available data that we can re-distribute using this API.</p>
      
      ## Technical related FAQ
      
      ### 1. Can I use Twitch User Credentials to access the API?
      <p>The IGDB API uses <code>Application Credentials</code> to authenticate, you <strong>cannot</strong> use user credentials to authenticate API requests</p>
      <p>More information about authentication can be found in the documentation, <a href="#authentication">here</a></p>
      
      ### 2. The requested images are in the wrong format!
      <p>Requesting images using the API returns a default image url using the <code>t_thumb</code> format. To request larger image sizes you should manually create your own image url using the <code>image_id</code> and the appropriate image size. example: <code>https://images.igdb.com/igdb/image/upload/t_{size}/{image_id}.png</code></p>
      <p>More information about images and image sizes can be found in our documentation, <a href="#images">here</a></p>
      
      ### 3. Why am I recieving a CORS error?
      <p>The IGDB API does not support browser requests, CORS, for security reasons. This is because the request would leak your access token! We suggest that you create a backend proxy which authenticates and queries the API directly, and can be set up as a trusted connection for your client application.</p>
      <p>For more information see our documentation, <a href="#proxy">here</a></p>
      
      ### 4. My AccessToken stopped working, why?
      <p>Your Access Token is only active for <strong>60 days</strong> and your application can only have <strong>25 active</strong> Access Tokens at one time, going over this limit starts to inactivate older tokens.</p>
      
      ### 5. Why am I only receiving IDs?
      <p> An empty request will only yield a list of IDs. To request more information in a single request you should <em>expand</em> your request.<br /> Ex: <code>fields *, cover.*;</code> </p>
      <p> More information about expanding requests, <a href="#expander">here</a><br /> More example requests, <a href="#examples">here</a> </p>
      
      ### 6. Why am I only receiving 10 items, how do I get more?
      <p> The default item limit is set to 10. To edit this limit simply specify the limit in your request.<br /> Ex: <code>limit 50;</code><br /> The maximum limit is set to 500 items/request. </p>
      <p>Read more about query syntax, <a href="#apicalypse-1">here</a></p>
      
      ### 7. How can I retrieve Popular Games?
      <p>Currently there is no popularity endpoint or popularity field on the game. The main reason is because popularity is quite vague since they can be many different ways to order/define popularity.</p>
      <p><em>It used to be in v3 however we were not confident enough on the data so it was not moved on the V4 version.</em></p>
      <p>Furthermore, the popular games you can see in IGDB.com homepage is specifically within the context of the website. Popularity is different in different context.</p>
      <br />
      <hr>
      
       # Support
       
       ### Have a question?
       <p>If you have any questions about the API we recommend that you <a href="https://discord.gg/FrvfwQg">join our Discord</a>, there you can discuss the API with other people working with it as well as the developers of the API and ask questions.</p>
       
       ### Reporting a bug
       <p>If you would like to report a bug with the API itself you can do so in Discord or use <a href="https://twitch.uservoice.com/forums/929953-igdb?category_id=389365">Uservoice</a></p>
       <br />
       <hr>
       
       # License
       <p> Any code examples or snippets found under <a href="https://api-docs.igdb.com/">api-docs.igdb.com</a> are made available under the <a rel="nofollow" href="https://www.twitch.tv/p/legal/developer-agreement/">Twitch Developer Services Agreement</a> as Program Materials. </p>
       
      <br />
      <hr>
      
  termsOfService: https://www.twitch.tv/p/en/legal/terms-of-service/
externalDocs:
  url: https://api-docs.igdb.com
servers:
  - url: https://api.igdb.com/v4
    description: The main base URL for the IGDB API
paths:
  /age_ratings:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Age Rating according to various rating organizations
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields category,checksum,content_descriptions,rating,rating_cover_url,synopsis;
      operationId: RetrieveAgeRating
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgeRating"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/?shell#age-rating
  /age_rating_content_descriptions:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Age Rating Descriptors
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields category,checksum,description;
      operationId: RetrieveAgeRatingContentDescription
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgeRatingContentDescription"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#age-rating-content-description
  /alternative_names:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Alternative and international game titles
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,comment,game,name;
      operationId: RetrieveAlternativeNames
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlternativeNames"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#alternative-name
  /artworks:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Official artworks (resolution and aspect ratio may vary)
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields alpha_channel,animated,checksum,game,height,image_id,url,width;
      operationId: RetreiveArtwork
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Artwork"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#artwork
  /characters:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Video game characters
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields akas,checksum,country_name,created_at,description,games,gender,mug_shot,name,slug,species,updated_at,url;
      operationId: RetreiveCharacter
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Character"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#character
  /character_mug_shots:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Images depicting game characters
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields alpha_channel,animated,checksum,height,image_id,url,width;
      operationId: RetreiveCharacterMugShot
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CharacterMugShot"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#character-mug-shot
  /collections:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Collection, AKA Series
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields as_child_relations,as_parent_relations,checksum,created_at,games,name,slug,type,updated_at,url;
      operationId: RetreiveCollection
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collection"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#collection
  /collection_memberships:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: The Collection Memberships.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,collection,created_at,game,type,updated_at;
      operationId: RetreiveCollectionMembership
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionMembership"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#collection-membership
  /collection_membership_types:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Enums for collection membership types.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,collection,created_at,game,type,updated_at;
      operationId: RetreiveCollectionMembershipType
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionMembershipType"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#collection-membership-type
  /collection_relations:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Describes Relationship between Collections.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,child_collection,created_at,parent_collection,type,updated_at;
      operationId: RetreiveCollectionRelation
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionRelation"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#collection-relation
  /collection_relation_types:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Collection Relation Types
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields allowed_child_type,allowed_parent_type,checksum,created_at,description,name,updated_at;
      operationId: RetreiveCollectionRelationType
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionRelationType"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#collection-relation-type
  /collection_types:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Enums for collection types.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,description,name,updated_at;
      operationId: RetreiveCollectionType
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionType"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#collection-type
  /companies:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Video game companies. Both publishers & developers
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields change_date,change_date_category,changed_company_id,checksum,country,created_at,description,developed,logo,name,parent,published,slug,start_date,start_date_category,updated_at,url,websites;
      operationId: RetreiveCompany
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#company
  /company_logos:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: The logos of developers and publishers
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields alpha_channel,animated,checksum,height,image_id,url,width;
      operationId: RetreiveCompanyLogo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyLogo"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#company-logo
  /company_websites:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Company Websites
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields category,checksum,trusted,url;
      operationId: RetreiveCompanyWebsite
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompanyWebsite"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#company-website
  /covers:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: The cover art of games
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields alpha_channel,animated,checksum,game,game_localization,height,image_id,url,width;
      operationId: RetreiveCover
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cover"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#cover
  /events:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Gaming event like GamesCom, Tokyo Game Show, PAX or GSL
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,description,end_time,event_logo,event_networks,games,live_stream_url,name,slug,start_time,time_zone,updated_at,videos;
      operationId: RetreiveEvents
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#event
  /event_logos:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Logo for the event
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields alpha_channel,animated,checksum,created_at,event,height,image_id,updated_at,url,width;
      operationId: RetreiveEventLogo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventLogo"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#event-logo
  /event_networks:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Urls related to the event like twitter, facebook and youtube
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,event,network_type,updated_at,url;
      operationId: RetreiveEventNetwork
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventNetwork"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#event-network
  /franchises:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: A list of video game franchises such as Star Wars.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,games,name,slug,updated_at,url;
      operationId: RetreiveFranchise
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Franchise"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#franchise
  /games:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Video Games!
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields age_ratings,aggregated_rating,aggregated_rating_count,alternative_names,artworks,bundles,category,checksum,collection,collections,cover,created_at,dlcs,expanded_games,expansions,external_games,first_release_date,follows,forks,franchise,franchises,game_engines,game_localizations,game_modes,genres,hypes,involved_companies,keywords,language_supports,multiplayer_modes,name,parent_game,platforms,player_perspectives,ports,rating,rating_count,release_dates,remakes,remasters,screenshots,similar_games,slug,standalone_expansions,status,storyline,summary,tags,themes,total_rating,total_rating_count,updated_at,url,version_parent,version_title,videos,websites;
      operationId: RetreiveGames
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Games"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#game
  /game_engines:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Video game engines such as unreal engine.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,companies,created_at,description,logo,name,platforms,slug,updated_at,url;
      operationId: RetreiveGameEngine
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameEngine"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#game-engine
  /game_engine_logos:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: The logos of game engines
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields alpha_channel,animated,checksum,height,image_id,url,width;
      operationId: RetreiveGameEngineLogo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameEngineLogo"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#game-engine-logo
  /external_games:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Game IDs on other services
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields category,checksum,countries,created_at,game,media,name,platform,uid,updated_at,url,year;
      operationId: RetreiveExternalGame
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExternalGame"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#external-game
  /game_versions:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Details about game editions and versions.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,features,game,games,updated_at,url;
      operationId: RetreiveGameVersion
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameVersion"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#game-version
  /game_modes:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Single player, Multiplayer etc
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,name,slug,updated_at,url;
      operationId: RetreiveGameMode
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameMode"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#game-mode
  /game_version_features:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Features and descriptions of what makes each version/edition different from the main game
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields category,checksum,description,position,title,values;
      operationId: RetreiveVersionFeatures
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameVersionFeatures"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#game-version-feature
  /game_version_feature_values:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: The bool/text value of the feature
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,game,game_feature,included_feature,note;
      operationId: RetreiveVersionFeatureValue
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameVersionFeatureValue"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#game-version-feature-value
  /genres:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Genres of video game
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,name,slug,updated_at,url;
      operationId: RetreiveGenre
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Genre"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#genre
  /involved_companies:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Companies involved with the game
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,company,created_at,developer,game,porting,publisher,supporting,updated_at;
      operationId: RetreiveInvolvedCompany
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvolvedCompany"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#involved-company
  /game_videos:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: A video associated with a game
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,game,name,video_id;
      operationId: RetreiveGameVideo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameVideo"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#game-video
  /keywords:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Keywords are words or phrases that get tagged to a game such as “world war 2” or “steampunk”.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,name,slug,updated_at,url;
      operationId: RetreiveKeyword
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Keyword"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#keyword
  /languages:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Languages that are used in the Language Support endpoint.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,locale,name,native_name,updated_at;
      operationId: RetreiveLanguage
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Language"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#language
  /game_localizations:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Game localization for a game
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,cover,created_at,game,name,region,updated_at;
      operationId: RetreiveGameLocalization
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameLocalization"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#game-localization
  /language_support_types:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Language Support Types contains the identifiers for the support types that Language Support uses.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,name,updated_at;
      operationId: RetreiveLanguageSupportType
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LanguageSupportType"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#language-support-type
  /multiplayer_modes:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Data about the supported multiplayer types
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields campaigncoop,checksum,dropin,game,lancoop,offlinecoop,offlinecoopmax,offlinemax,onlinecoop,onlinecoopmax,onlinemax,platform,splitscreen,splitscreenonline;
      operationId: RetreiveMultiplayerMode
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultiplayerMode"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#multiplayer-mode
  /language_supports:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Games can be played with different languages for voice acting, subtitles, or the interface language.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,game,language,language_support_type,updated_at;
      operationId: RetreiveLanguageSupport
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LanguageSupport"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#language-support
  /network_types:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Social networks related to the event like twitter, facebook and youtube
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,event_networks,name,updated_at;
      operationId: RetreiveNetworkType
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkType"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#network-type
  /platform_families:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: A collection of closely related platforms
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,name,slug;
      operationId: RetreivePlatformFamily
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformFamily"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#platform-family
  /platform_logos:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Logo for a platform
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields alpha_channel,animated,checksum,height,image_id,url,width;
      operationId: RetreivePlatformLogo
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformLogo"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#platform-logo
  /platform_versions:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: The platform's version
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,companies,connectivity,cpu,graphics,main_manufacturer,media,memory,name,online,os,output,platform_logo,platform_version_release_dates,resolutions,slug,sound,storage,summary,url;
      operationId: RetreivePlatformVersion
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformVersion"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#platform-version
  /platform_version_companies:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: A platform developer
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,comment,company,developer,manufacturer;
      operationId: RetreivePlatformVersionCompany
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformVersionCompany"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#platform-version-company
  /platforms:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: The hardware used to run the game or game delivery network
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields abbreviation,alternative_name,category,checksum,created_at,generation,name,platform_family,platform_logo,slug,summary,updated_at,url,versions,websites;
      operationId: RetreivePlatform
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Platform"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#platform
  /platform_version_release_dates:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields category,checksum,created_at,date,human,m,platform_version,region,updated_at,y;
      operationId: RetreivePlatformVersionReleaseDate
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformVersionReleaseDate"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#platform-version-release-date
  /platform_websites:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: The main website for the platform
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields category,checksum,trusted,url;
      operationId: RetreivePlatformWebsite
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformWebsite"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#platform-website
  /player_perspectives:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Player perspectives describe the view/perspective of the player in a video game.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,name,slug,updated_at,url;
      operationId: RetreivePlayerPerspective
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerPerspective"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#player-perspective
  /regions:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Region for game localization
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields category,checksum,created_at,identifier,name,updated_at;
      operationId: RetreiveRegion
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Region"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#region
  /release_dates:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: A handy endpoint that extends game release dates. Used to dig deeper into release dates, platforms and versions.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields category,checksum,created_at,date,game,human,m,platform,region,status,updated_at,y;
      operationId: RetreiveReleaseDate
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseDate"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#release-date
  /release_date_statuses:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: An endpoint to provide definition of all of the current release date statuses.
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,description,name,updated_at;
      operationId: RetreiveReleaseDateStatus
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseDateStatus"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#release-date-status
  /screenshots:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Screenshots of games
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields alpha_channel,animated,checksum,game,height,image_id,url,width;
      operationId: RetreiveScreenshot
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Screenshot"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#screenshot
  /search:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Search IGDB!
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields alternative_name,character,checksum,collection,company,description,game,name,platform,published_at,test_dummy,theme; search "zelda";
      operationId: RetreiveSearch
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Search"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#search
  /themes:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: Video game themes
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields checksum,created_at,name,slug,updated_at,url;
      operationId: RetreiveTheme
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#theme
  /websites:
    post:
      security:
        - TwitchOAuth: []
          Client-ID: []
      summary: A website url, usually associated with a game
      tags:
        - Endpoints
      parameters: []
      requestBody:
        required: false
        content:
          text/plain:
            schema:
              type: string
            example: fields category,checksum,game,trusted,url;
      operationId: RetreiveWebsite
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Website"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/AuthFailure"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      externalDocs:
        description: "Official documentation:"
        url: https://api-docs.igdb.com/#website
components:
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            description: Authorization Failure
            properties:
              title:
                type: string
              status:
                type: number
              cause:
                type: string
            example:
              title: Invalid Field
              status: 400
              example: "Invalid field name: 'checksums'"
    AuthFailure:
      description: Authorization Failure
      content:
        application/json:
          schema:
            type: object
            description: Authorization Failure
            properties:
              message:
                type: string
              "Tip 1":
                type: string
              "Tip 2":
                type: string
              "Tip 3":
                type: string
              Docs:
                type: string
                format: url
              Discord:
                type: string
                format: url
            example:
              message: "Authorization Failure. Have you tried:"
              "Tip 1": "Ensure you are sending Authorization and Client-ID as headers."
              "Tip 2": "Ensure Authorization value starts with 'Bearer ', including the space"
              "Tip 3": "Ensure Authorization value ends with the App Access Token you generated, NOT your Client Secret."
              Docs: "https://api-docs.igdb.com/#authentication"
              Discord: "https://discord.gg/FrvfwQg"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            description: Forbidden
            properties:
              title:
                type: string
              status:
                type: number
              cause:
                type: string
              details:
                type: string
            example:
              title: Forbidden
              status: 403
              cause: Reqest limit too high
              details: You typed in 2500 but your maximum is 500
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            description: Not Found
            properties:
              title:
                type: string
              status:
                type: number
              type:
                type: string
              details:
                type: string
            example:
              title: Not Found
              status: 404
              type: https://javalin.io/documentation#notfoundresponse
              details: {}
  schemas:
    AgeRating:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        category:
          $ref: "#/components/schemas/AgeRatingCategoryEnums"
        content_descriptions:
          type: array
          items:
            $ref: "#/components/schemas/AgeRatingContentDescription/properties/id"
          description: Array of Age Rating Content Description IDs
        rating:
          $ref: "#/components/schemas/AgeRatingEnums"
        rating_cover_url:
          type: string
          description: The url for the image of an age rating
        synopsis:
          type: string
          description: A free text motivating a rating
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    AgeRatingCategoryEnums:
      type: integer
      format: int32
      enum: [1, 2, 3, 4, 5, 6, 7]
      description: |
        The organization that has issued a specific rating  
        1: ESRB  
        2: PEGI  
        3: CERO  
        4: USK  
        5: GRAC  
        6: CLASS_IND  
        7: ACB  
    AgeRatingEnums:
      type: integer
      format: int32
      enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39]
      description: |
        The age rating assigned by the organization  
        1: Three  
        2: Seven  
        3: Twelve  
        4: Sixteen  
        5: Eighteen  
        6: RP  
        7: EC  
        8: E  
        9: E10  
        10: T  
        11: M  
        12: AO  
        13: CERO_A  
        14: CERO_B  
        15: CERO_C  
        16: CERO_D  
        17: CERO_Z  
        18: USK_0  
        19: USK_6  
        20: USK_12  
        21: USK_16  
        22: USK_18  
        23: GRAC_ALL  
        24: GRAC_Twelve  
        25: GRAC_Fifteen  
        26: GRAC_Eighteen  
        27: GRAC_TESTING  
        28: CLASS_IND_L  
        29: CLASS_IND_Ten  
        30: CLASS_IND_Twelve  
        31: CLASS_IND_Fourteen  
        32: CLASS_IND_Sixteen  
        33: CLASS_IND_Eighteen  
        34: ACB_G  
        35: ACB_PG  
        36: ACB_M  
        37: ACB_MA15  
        38: ACB_R18  
        39: ACB_RC  
    AgeRatingContentDescription:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        category:
          $ref: "#/components/schemas/AgeRatingContentDescriptionCategoryEnums"
        description:
          type: string
          description: A string containing the age rating content descriptions
        checksum:
          type: string
          description: Hash of the object
    AgeRatingContentDescriptionCategoryEnums:
      type: integer
      format: int32
      enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85]
      description: |
        The age rating content description enums  
        1: ESRB_alcohol_reference  
        2: ESRB_animated_blood  
        3: ESRB_blood  
        4: ESRB_blood_and gore  
        5: ESRB_cartoon_violence  
        6: ESRB_comic_mischief  
        7: ESRB_crude_humor  
        8: ESRB_drug_reference  
        9: ESRB_fantasy_violence  
        10: ESRB_intense_violence  
        11: ESRB_language  
        12: ESRB_lyrics  
        13: ESRB_mature_humor  
        14: ESRB_nudity  
        15: ESRB_partial_nudity  
        16: ESRB_real_gambling  
        17: ESRB_sexual_content  
        18: ESRB_sexual_themes  
        19: ESRB_sexual_violence  
        20: ESRB_simulated_gambling  
        21: ESRB_strong_language  
        22: ESRB_strong_lyrics  
        23: ESRB_strong_sexual content  
        24: ESRB_suggestive_themes  
        25: ESRB_tobacco_reference  
        26: ESRB_use_of alcohol  
        27: ESRB_use_of drugs  
        28: ESRB_use_of tobacco  
        29: ESRB_violence  
        30: ESRB_violent_references  
        31: ESRB_animated_violence  
        32: ESRB_mild_language  
        33: ESRB_mild_violence  
        34: ESRB_use_of drugs and alcohol  
        35: ESRB_drug_and alcohol reference  
        36: ESRB_mild_suggestive themes  
        37: ESRB_mild_cartoon violence  
        38: ESRB_mild_blood  
        39: ESRB_realistic_blood and gore  
        40: ESRB_realistic_violence  
        41: ESRB_alcohol_and tobacco reference  
        42: ESRB_mature_sexual themes  
        43: ESRB_mild_animated violence  
        44: ESRB_mild_sexual themes  
        45: ESRB_use_of alcohol and tobacco  
        46: ESRB_animated_blood and gore  
        47: ESRB_mild_fantasy violence  
        48: ESRB_mild_lyrics  
        49: ESRB_realistic_blood  
        50: PEGI_violence  
        51: PEGI_sex  
        52: PEGI_drugs  
        53: PEGI_fear  
        54: PEGI_discrimination  
        55: PEGI_bad_language  
        56: PEGI_gambling  
        57: PEGI_online_gameplay  
        58: PEGI_in_game_purchases  
        59: CERO_love  
        60: CERO_sexual_content  
        61: CERO_violence  
        62: CERO_horror  
        63: CERO_drinking_smoking  
        64: CERO_gambling  
        65: CERO_crime  
        66: CERO_controlled_substances  
        67: CERO_languages_and others  
        68: GRAC_sexuality  
        69: GRAC_violence  
        70: GRAC_fear_horror_threatening  
        71: GRAC_language  
        72: GRAC_alcohol_tobacco_drug  
        73: GRAC_crime_anti_social  
        74: GRAC_gambling  
        75: CLASS_IND_violencia  
        76: CLASS_IND_violencia_extrema  
        77: CLASS_IND_conteudo_sexual  
        78: CLASS_IND_nudez  
        79: CLASS_IND_sexo  
        80: CLASS_IND_sexo_explicito  
        81: CLASS_IND_drogas  
        82: CLASS_IND_drogas_licitas  
        83: CLASS_IND_drogas_ilicitas  
        84: CLASS_IND_linguagem_impropria  
        85: CLASS_IND_atos_criminosos  
    AlternativeNames:
      type: object
      description: Alternative and international game titles
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        comment:
          type: string
          description: >-
            A description of what kind of alternative name it is. (Acronym,
            Working title, Japanese title etc)
        game:
          $ref: "#/components/schemas/Games/properties/id"
        name:
          type: string
          description: An alternative name
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Artwork:
      type: object
      description: Official artworks. Resolution and aspect ratio may vary
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        alpha_channel:
          type: boolean
        animated:
          type: boolean
        game:
          $ref: "#/components/schemas/Games/properties/id"
        height:
          type: integer
          format: int32
          description: The height of the image in pixels
        image_id:
          type: string
          description: The ID of the image used to construct an IGDB image link
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        width:
          type: integer
          format: int32
          description: The width of the image in pixels
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Character:
      type: object
      description: Video game characters
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        akas:
          type: array
          items:
            type: string
          description: Alternative names for a character
        country_name:
          type: string
          description: A Character's country of origin
        created_at:
          type: number
          format: timestamp
          description: Date this was initally added to the IGDB database
        description:
          type: string
          description: Text describing a character
        games:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
        gender:
          $ref: "#/components/schemas/CharacterGenderEnum"
        mug_shot:
          $ref: "#/components/schemas/CharacterMugShot/properties/id"
        name:
          type: string
          description: The character's name
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        species:
          $ref: "#/components/schemas/CharacterSpeciesEnum"
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    CharacterGenderEnum:
      type: integer
      format: int32
      enum: [0, 1, 2]
      description: |
        An Enum of the character's gender  
        0: Male  
        1: Female  
        2: Other  
    CharacterSpeciesEnum:
      type: integer
      format: int32
      description: |
        An enum of the Character's species  
        1: Human  
        2: Alien  
        3: Animal  
    CharacterMugShot:
      type: object
      description: Images depicting game characters
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        alpha_channel:
          type: boolean
        animated:
          type: boolean
        height:
          type: integer
          format: int32
          description: The height of the image in pixels
        image_id:
          type: string
          description: The ID of the image used to construct an IGDB image link
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        width:
          type: integer
          format: int32
          description: The width of the image in pixels
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Collection:
      type: object
      description: Collection, AKA Series
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        as_child_relations:
          type: array
          items:
            $ref: "#/components/schemas/CollectionRelation/properties/id"
        as_parent_relations:
          type: array
          items:
            $ref: "#/components/schemas/CollectionRelation/properties/id"
        created_at:
          type: number
          format: timestamp
          description: Date this was initally added to the IGDB database
        games:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
        name:
          type: string
          description: Umbrella term for a collection of games
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        type:
          $ref: "#/components/schemas/CollectionType/properties/id"
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    CollectionMembership:
      type: object
      description: The collection memberships
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        game:
          $ref: "#/components/schemas/Games/properties/id"
        collection:
          type: string
          description: Reference ID for Collection
        type:
          $ref: "#/components/schemas/CollectionMembershipType/properties/id"
        updated_at:
          type: number
          format: url
          description: The last date this entry was updated in the IGDB database
        created_at:
          type: number
          format: timestamp
          description: Date this was initally added to the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    CollectionMembershipType:
      type: object
      description: Enums for collection membership type
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        allowed_collection_type:
          $ref: "#/components/schemas/CollectionType/properties/id"
        checksum:
          type: string
          description: Hash of the object
        created_at:
          type: number
          description: Date this was initally added to the IGDB database
        description:
          type: string
          description: Description of the membership type
        name:
          type: string
          description: The membership type name
        updated_at:
          type: number
          description: The last date this entry was updated in the IGDB database
    CollectionRelation:
      type: object
      description: Describes relationship between collections
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        child_collection:
          $ref: "#/components/schemas/Collection/properties/id"
        created_at:
          type: number
          format: timestamp
          description: Date this was initally added to the IGDB database
        parent_collection:
          $ref: "#/components/schemas/Collection/properties/id"
        type:
          $ref: "#/components/schemas/CollectionRelationType/properties/id"
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    CollectionRelationType:
      type: object
      description: Enums for collection membership type
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        name:
          type: string
          description: The membership type name
        description:
          type: string
          description: Description of the membership type
        allowed_child_type:
          $ref: "#/components/schemas/CollectionType/properties/id"
        allowed_parent_type:
          $ref: "#/components/schemas/CollectionType/properties/id"
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        created_at:
          type: number
          format: timestamp
          description: Date this was initally added to the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    CollectionType:
      type: object
      description: Enums for collection membership type
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        name:
          type: string
          description: The membership type name
        description:
          type: string
          description: Description of the membership type
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        created_at:
          type: number
          format: timestamp
          description: Date this was initally added to the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Company:
      type: object
      description: Video game companies, both publishers and developers
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        change_date_category:
          $ref: "#/components/schemas/ChangeDateCategoryEnum"
        change_date:
          type: number
          format: timestamp
          description: The date when a compnay got a new ID
        changed_company_id:
          type: string
          description: The new ID for a company that has gone through a merger or restructuring
        country:
          type: integer
          format: int32
          description: ISO 3166-1 numeric country code
        created_at:
          type: number
          format: timestamp
          description: Date this was initally added to the IGDB database
        description:
          type: string
          description: A free text description of the company
        developed:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
        logo:
          $ref: "#/components/schemas/CompanyLogo/properties/id"
        name:
          type: string
          description: The name of the company
        parent:
          $ref: "#/components/schemas/Company/properties/id"
        published:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        start_date:
          type: number
          format: timestamp
          description: The date that the company was founded
        start_date_category:
          $ref: "#/components/schemas/StartDateCategoryEnum"
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        websites:
          type: array
          items:
            $ref: "#/components/schemas/CompanyWebsite/properties/id"
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    ChangeDateCategoryEnum:
      type: integer
      format: int32
      enum: [0, 1, 2, 3, 4, 5, 6, 7]
      description: |
        An enum of the date format  
        0: YYYYMMMMDD  
        1: YYYYMMMM  
        2: YYYY  
        3: YYYYQ1  
        4: YYYYQ2  
        5: YYYYQ3  
        6: YYYYQ4  
        7: TBD  
    StartDateCategoryEnum:
      type: integer
      format: int32
      enum: [0, 1, 2, 3, 4, 5, 6, 7]
      description: |
        An enum of the date format  
        0: YYYYMMMMDD  
        1: YYYYMMMM  
        2: YYYY  
        3: YYYYQ1  
        4: YYYYQ2  
        5: YYYYQ3  
        6: YYYYQ4  
        7: TBD  
    CompanyLogo:
      type: object
      description: The logos of developers and publishers
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        alpha_channel:
          type: boolean
        animated:
          type: boolean
        height:
          type: integer
          format: int32
          description: The height of the image in pixels
        image_id:
          type: string
          description: The ID of the image used to construct an IGDB image link
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        width:
          type: integer
          format: int32
          description: The width of the image in pixels
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    CompanyWebsite:
      type: object
      description: A company's website links
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        category:
          $ref: "#/components/schemas/CompanyWebsiteEnums"
        trusted:
          type: boolean
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    CompanyWebsiteEnums:
      type: integer
      format: int32
      enum: [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
      description: |
        An enum of the date format  
        1: official  
        2: wikia  
        3: wikipedia  
        4: facebook  
        5: twitter  
        6: twitch  
        8: instagram  
        9: youtube  
        10: iphone  
        11: ipad  
        12: android  
        13: steam  
        14: reddit  
        15: itch  
        16: epicgames  
        17: gog  
        18: discord  
    Cover:
      type: object
      description: The cover art of games
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        alpha_channel:
          type: boolean
        animated:
          type: boolean
        game:
          $ref: "#/components/schemas/Games/properties/id"
          description: The game this cover is associated with. If it is empty then this cover belongs to a game_localization, which can be found under game_localization field
        game_localization:
          type: string
          description: Reference ID for Game Localization this cover might be associated with
        height:
          type: integer
          format: int32
          description: The height of the image in pixels
        image_id:
          type: string
          description: The ID of the image used to construct an IGDB image link
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        width:
          type: integer
          format: int32
          description: The width of the image in pixels
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Event:
      type: object
      description: Gaming events like GamesCom, Tokyo Game Show, PAX, or GSL
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        name:
          type: string
          description: The name of the event
        description:
          type: string
          description: The description of the event
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        event_logo:
          $ref: "#/components/schemas/EventLogo/properties/id"
        start_time:
          type: number
          format: timestamp
          description: Start time of the event in UTC
        end_time:
          type: number
          format: timestamp
          description: End time of the event in UTC
        time_zone:
          type: string
          description: Timezone the event is in.
        live_stream_url:
          type: string
          format: url
          description: URL to the livestream of the event.
        games:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
        videos:
          type: array
          items:
            $ref: "#/components/schemas/GameVideo/properties/id"
        event_networks:
          type: array
          items:
            $ref: "#/components/schemas/EventNetwork/properties/id"
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    EventLogo:
      type: object
      description: Logo for the event
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        event:
          $ref: "#/components/schemas/Event/properties/id"
        alpha_channel:
          type: boolean
        animated:
          type: boolean
        height:
          type: integer
          format: int32
          description: The height of the image in pixels
        image_id:
          type: string
          description: The ID of the image used to construct an IGDB image link
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        width:
          type: integer
          format: int32
          description: The width of the image in pixels
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    EventNetwork:
      type: object
      description: URLs related to the event like Twitter, Facebook, and Youtube
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        event:
          $ref: "#/components/schemas/Event/properties/id"
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        network_type:
          $ref: "#/components/schemas/NetworkType/properties/id"
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Franchise:
      type: object
      description: A list of video game franchises such as Star Wars
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        games:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
        name:
          type: string
          description: The name of the franchise
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Games:
      type: object
      description: Video Games!
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        age_ratings:
          type: array
          items:
            $ref: "#/components/schemas/AgeRatingEnums"
        aggregated_rating:
          type: number
          format: double
          description: Rating based on external critic scores
        aggregated_rating_count:
          type: integer
          format: int32
          description: Number of external critic scores
        alternative_names:
          type: array
          items:
            $ref: "#/components/schemas/AlternativeNames/properties/id"
        artworks:
          type: array
          items:
            $ref: "#/components/schemas/Artwork/properties/id"
        bundles:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
        category:
          $ref: "#/components/schemas/GameCategoryEnums"
        collection:
          type: number
          format: int32
          description: DEPRRICATED - Use collections field. Reference ID for collection
          deprecated: true
        collections:
          type: array
          items:
            $ref: "#/components/schemas/Collection/properties/id"
        cover:
          $ref: "#/components/schemas/Cover/properties/id"
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        dlcs:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
        expanded_games:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
        expansions:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
        external_games:
          type: array
          items:
            $ref: "#/components/schemas/ExternalGame/properties/id"
        follows:
          type: number
          format: int32
          description: DEPRECATED- TO BE REMOVED. The number of people following a game
          deprecated: true
        first_release_date:
          type: number
          format: timestamp
          description: The first release date for this game
        forks:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
        franchise:
          type: string
          description: The main franchise
        franchises:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
          description: Other franchises the game belongs to
        game_engines:
          type: array
          items:
            $ref: "#/components/schemas/GameEngine/properties/id"
          description: The game engine used in this game
        game_localizations:
          type: array
          items:
            $ref: "#/components/schemas/GameLocalization/properties/id"
          description: Supported game localizations for this game. A region can have at most one game localization for a given game
        game_modes:
          type: array
          items:
            $ref: "#/components/schemas/GameMode/properties/id"
          description: Modes of gameplay
        genres:
          type: array
          items:
            $ref: "#/components/schemas/Genre/properties/id"
          description: Genres of the game
        hypes:
          type: integer
          format: int32
          description: Number of follows a game gets before release
        involved_companies:
          type: array
          items:
            $ref: "#/components/schemas/Company/properties/id"
          description: Companies who developed this game
        keywords:
          type: array
          items:
            $ref: "#/components/schemas/Keyword/properties/id"
          description: Associated keywords
        language_supports:
          type: array
          items:
            $ref: "#/components/schemas/LanguageSupport/properties/id"
          description: Supported Languages for this game
        multiplayer_modes:
          type: array
          items:
            $ref: "#/components/schemas/MultiplayerMode/properties/id"
          description: Multiplayer modes for this game
        name:
          type: string
          description: The name of the Game
        parent_game:
          $ref: "#/components/schemas/Games/properties/id"
          description: If a DLC, expansion or part of a bundle, this is the main game or bundle
        platforms:
          type: array
          items:
            $ref: "#/components/schemas/Platform/properties/id"
          description: Platforms this game was released on
        player_perspectives:
          type: array
          items:
            $ref: "#/components/schemas/PlayerPerspective/properties/id"
          description: The main perspective of the player
        ports:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
          description: Ports of this game
        rating:
          type: number
          format: double
          description: Average IGDB user rating
        rating_count:
          type: integer
          format: int32
          description: Total number of IGDB user ratings
        release_dates:
          type: array
          items:
            $ref: "#/components/schemas/ReleaseDate/properties/id"
          description: Release dates of this game
        remakes:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
          description: Remakes of this game
        remasters:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
          description: Remasters of this game
        screenshots:
          type: array
          items:
            $ref: "#/components/schemas/Screenshot/properties/id"
          description: Screenshots of this game
        similar_games:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
          description: Similar games
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        standalone_expansions:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
          description: Standalone expansions of this game
        status:
          $ref: "#/components/schemas/GameStatusEnums"
        storyline:
          type: string
          description: A short description of a games story
        summary:
          type: string
          description: A description of the game
        tags:
          type: array
          items:
            type: number
          description: Related entities in the IGDB API
        themes:
          type: array
          items:
            $ref: "#/components/schemas/Theme/properties/id"
          description: Themes of the game
        total_rating:
          type: number
          format: double
          description: Average rating based on both IGDB user and external critic scores
        total_rating_count:
          type: integer
          format: int32
          description: Total number of user and external critic scores
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        version_parent:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
          description: If a version, this is the main game
        version_title:
          type: string
          description: Title of this version (i.e Gold edition)
        videos:
          type: array
          items:
            $ref: "#/components/schemas/GameVideo/properties/id"
          description: Videos of this game
        websites:
          type: array
          items:
            $ref: "#/components/schemas/Website/properties/id"
          description: Websites associated with this game
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    GameCategoryEnums:
      type: integer
      format: int32
      enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
      description: |
        A game's category/catagories  
        0: main_game  
        1: dlc_addon  
        2: expansion  
        3: bundle  
        4: standalone_expansion  
        5: mod  
        6: episode  
        7: season  
        8: remake  
        9: remaster  
        10: expanded_game  
        11: port  
        12: fork  
        13: pack  
        14: update  
    GameStatusEnums:
      type: integer
      format: int32
      enum: [0, 2, 3, 4, 5, 6, 7, 8]
      description: |
        A game's operational status  
        0: released  
        2: alpha  
        3: beta  
        4: early_access  
        5: offline  
        6: cancelled  
        7: rumored  
        8: delisted  
    GameEngine:
      type: object
      description: Video game engines such as unreal engine
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        companies:
          type: array
          items:
            $ref: "#/components/schemas/Company/properties/id"
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        description:
          type: string
          description: Description of the game engine
        logo:
          $ref: "#/components/schemas/GameEngineLogo/properties/id"
          description: Logo of the game engine
        name:
          type: string
          description: Name of the game engine
        platforms:
          type: array
          items:
            $ref: "#/components/schemas/Platform/properties/id"
          description: Platforms this game engine was deployed on
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        url:
          type: string
          format: uuid
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    GameEngineLogo:
      type: object
      description: The logos of developers and publishers
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        alpha_channel:
          type: boolean
        animated:
          type: boolean
        height:
          type: integer
          format: int32
          description: The height of the image in pixels
        image_id:
          type: string
          description: The ID of the image used to construct an IGDB image link
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        width:
          type: integer
          format: int32
          description: The width of the image in pixels
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    ExternalGame:
      type: object
      description: Game IDs on other services
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        category:
          $ref: "#/components/schemas/ExternalGameCategoryEnums"
          description: The id of the other service
        countries:
          type: array
          items:
            type: integer
            format: int32
          description: The ISO country code of the external game product.
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        game:
          $ref: "#/components/schemas/Games/properties/id"
        media:
          $ref: "#/components/schemas/ExternalGameMediaEnums"
          description: The media of the external game.
        name:
          type: string
          description: The name of the game according to the other service
        platform:
          $ref: "#/components/schemas/Platform/properties/id"
          description: The platform of the external game product.
        uid:
          type: string
          description: The other services ID for this game
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        year:
          type: integer
          format: int32
          description: The year in full (2018)
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    ExternalGameCategoryEnums:
      type: integer
      format: int32
      description: |
        The external platform the game is on  
        1: steam  
        5: gog  
        10: youtube  
        11: microsoft  
        13: apple  
        14: twitch  
        15: android  
        20: amazon_asin  
        22: amazon_luna  
        23: amazon_adg  
        26: epic_game_store  
        28: oculus  
        29: utomik  
        30: itch_io  
        31: xbox_marketplace  
        32: kartridge  
        36: playstation_store_us  
        37: focus_entertainment  
        54: xbox_game_pass_ultimate_cloud  
        55: gamejolt  
    ExternalGameMediaEnums:
      type: integer
      format: int32
      enum: [1, 2]
      description: |
        The type of media  
        1: digital  
        2: physical  
    GameVersion:
      type: object
      description: Details about game editions and versions. (DLC and more)
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        features:
          type: array
          items:
            $ref: "#/components/schemas/GameVersionFeatures/properties/id"
          description: Features and descriptions of what makes each version/edition different from the main game
        game:
          $ref: "#/components/schemas/Games/properties/id"
          description: The game these versions/editions are of
        games:
          type: array
          items:
            $ref: "#/components/schemas/Games/properties/id"
          description: Game Versions and Editions
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    GameMode:
      type: object
      description: Single player, Multiplayer, etc.
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        name:
          type: string
          description: The name of the game mode
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    GameVersionFeatures:
      type: object
      description: Features and descriptions of what makes each version/edition different from the main game
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        category:
          $ref: "#/components/schemas/GameVersionFeatureCategoryEnums"
          description: The category of the feature description
        description:
          type: string
          description: The description of the feature
        position:
          type: integer
          format: int32
          description: Position of this feature in the list of features
        title:
          type: string
          description: The title of the version/addition/DLC
        values:
          type: array
          items:
            $ref: "#/components/schemas/GameVersionFeatures/properties/id"
          description: The bool/text value of the feature
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    GameVersionFeatureCategoryEnums:
      type: integer
      format: int32
      description: |
        The data type of feature description  
        0: boolean  
        1: description  
    GameVersionFeatureValue:
      type: object
      description: The bool/text value of the feature
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        game:
          $ref: "#/components/schemas/Games/properties/id"
        game_feature:
          $ref: "#/components/schemas/GameVersionFeatures/properties/id"
        included_feature:
          $ref: "#/components/schemas/GameVersionIncludedFeatureEnums"
        note:
          type: string
          description: The text value of this feature
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    GameVersionIncludedFeatureEnums:
      type: integer
      format: int32
      enum: [0, 1, 2]
      description: |
        The value of this feature  
        0: NOT_INCLUDED  
        1: INCLUDED  
        2: PRE_ORDER_ONLY  
    Genre:
      type: object
      description: Genres of video games
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        name:
          type: string
          description: The name of the genre
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    InvolvedCompany:
      type: object
      description: Involved companies
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        company:
          $ref: "#/components/schemas/Company/properties/id"
        created_at:
          type: number
          format: timestamp
          description: Date this was initally added to the IGDB database
        developer:
          type: boolean
          description: Is the company a/the developer?
        game:
          $ref: "#/components/schemas/Company/properties/id"
        porting:
          type: boolean
          description: Did the company port the game?
        publisher:
          type: boolean
          description: Did the company publish the game?
        supporting:
          type: boolean
          description: Did the company suppport the game?
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    GameVideo:
      type: object
      description: A video associated with a game
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        game:
          $ref: "#/components/schemas/Games/properties/id"
        name:
          type: string
          description: The name of the video
        video_id:
          type: string
          description: The external ID of the video (usually youtube)
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Keyword:
      type: object
      description: Keywords are words or phrases that get tagged to a game such as “world war 2” or “steampunk”.
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        name:
          type: string
          description: The keyword
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        updated_at:
          type: number
          format: timestamp
          description: The last date this entry was updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Language:
      type: object
      description: Languages that are used in the Language Support endpoint.
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        name:
          type: string
          description: The name of the localization
        native_name:
          type: string
          description: The native name of the language
        locale:
          type: string
          description: The combination of Language code and Country code (en-US)
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    GameLocalization:
      type: object
      description: Game localization for a game
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        name:
          type: string
          description: The localized name
        game:
          $ref: "#/components/schemas/Games/properties/id"
        cover:
          $ref: "#/components/schemas/Cover/properties/id"
          description: Date this was initially added to the IGDB database
        region:
          $ref: "#/components/schemas/Region/properties/id"
          description: The region ID
        created_at:
          type: number
          format: timestamp
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    LanguageSupportType:
      type: object
      description: Language Support Types contains the identifiers for the support types that Language Support uses.
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        name:
          type: string
          description: The name of the method of support. (Audio, Subtitles, etc)
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    MultiplayerMode:
      type: object
      description: Data about the supported multiplayer types
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        camapigncoop:
          type: boolean
          description: True if the game supports campaign coop
        dropin:
          type: boolean
          description: True if the game supports drop in/out multiplayer
        game:
          $ref: "#/components/schemas/Games/properties/id"
        lancoop:
          type: boolean
          description: True if the game supports LAN coop
        offlinecoop:
          type: integer
          description: True if the game supports offline coop
        offliencoopmax:
          type: number
          format: int32
          description: Maximum number of offline players in offline coop
        offlinemax:
          type: integer
          format: int32
          description: Maximum number of players in offline multiplayer
        onlinecoop:
          type: boolean
          description: True if the game supports online coop
        onlinecoopmax:
          type: integer
          format: int32
          description: Maximum number of online players in online coop
        onlinemax:
          type: integer
          format: int32
          description: Maximum number of online players in online coop
        platform:
          $ref: "#/components/schemas/Platform/properties/id"
        splitscreen:
          type: boolean
          description: True if the game supports, split screen, offline multiplayer
        splitscreenonline:
          type: boolean
          description: True if the game supports split screen, online multiplayer
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    LanguageSupport:
      type: object
      description: Games can be played with different languages for voice acting, subtitles, or the interface language.
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        game:
          $ref: "#/components/schemas/Games/properties/id"
        language:
          $ref: "#/components/schemas/Language/properties/id"
        language_support_type:
          $ref: "#/components/schemas/LanguageSupportType/properties/id"
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    NetworkType:
      type: object
      description: Social networks related to the event like twitter, facebook and youtube
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        name:
          type: string
          description: The name of the social network
        event_networks:
          type: array
          items:
            $ref: "#/components/schemas/EventNetwork/properties/id"
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    PlatformFamily:
      type: object
      description: A collection of closely related platforms
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        name:
          type: string
          description: The name of the platform family
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    PlatformLogo:
      type: object
      description: Logo for a platform
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        alpha_channel:
          type: boolean
        animated:
          type: boolean
        height:
          type: integer
          format: int32
          description: The height of the image in pixels
        image_id:
          type: string
          description: The ID of the image used to construct an IGDB image link
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        width:
          type: integer
          format: int32
          description: The width of the image in pixels
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    PlatformVersion:
      type: object
      description: The specific platform and the specifications (Xbox Series X, Playstation 5)
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        companies:
          type: array
          items:
            $ref: "#/components/schemas/PlatformVersionCompany/properties/id"
        connectivity:
          type: string
          description: The network capabilities
        cpu:
          type: string
          description: The integrated central processing unit
        graphics:
          type: string
          description: The graphics chipset
        main_manufacturer:
          $ref: "#/components/schemas/PlatformVersionCompany/properties/id"
        media:
          type: string
          description: The type of media this version accepts
        memory:
          type: string
          description: How much memory there is
        name:
          type: string
          description: The name of the platform version
        online:
          type: string
          description: The online service, like Xbox Live
        os:
          type: string
          description: The operating system installed on the platform version
        output:
          type: string
          description: The output video rate
        platform_logo:
          $ref: "#/components/schemas/PlatformLogo/properties/id"
        platform_version_release_dates:
          type: array
          items:
            $ref: "#/components/schemas/PlatformVersionReleaseDate/properties/id"
        resolutions:
          type: string
          description: The maximum resolution
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        sound:
          type: string
          description: The sound chipset
        storage:
          type: string
          description: How much storage there is
        summary:
          type: string
          description: A short summary
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    PlatformVersionCompany:
      type: object
      description: A platform developer
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        comment:
          type: string
          description: Any notable comments about the developer
        company:
          $ref: "#/components/schemas/Company/properties/id"
        developer:
          type: boolean
          description: If the company is the developer
        manufacturer:
          type: boolean
          description: If the company is the manufactuer
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Platform:
      type: object
      description: The hardware used to run the game or game delivery network
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        abbreviation:
          type: string
          description: An abbreviation of the platform name
        alternative_name:
          type: string
          description: An alternative name for the platform
        category:
          $ref: "#/components/schemas/PlatformCategoryEnums"
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        generation:
          type: integer
          format: int32
          description: The generation of the platform
        name:
          type: string
          description: The name of the platform
        platform_family:
          $ref: "#/components/schemas/PlatformFamily/properties/id"
        platform_logo:
          $ref: "#/components/schemas/PlatformLogo/properties/id"
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        summary:
          type: string
          description: The summary of the first Version of this platform
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        versions:
          type: array
          items:
            $ref: "#/components/schemas/PlatformVersion/properties/id"
        websites:
          type: array
          items:
            $ref: "#/components/schemas/PlatformWebsite/properties/id"
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    PlatformCategoryEnums:
      type: integer
      format: int32
      enum: [1, 2, 3, 4, 5, 6]
      description: |
        The category of the platform  
        1: console  
        2: arcade  
        3: platform  
        4: operating_system  
        5: portable_console  
        6: computer  
    PlatformVersionReleaseDate:
      type: object
      description: A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        category:
          $ref: "#/components/schemas/PlatformVersionReleaseDateEnums"
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        date:
          type: string
          format: timestamp
          description: The release date
        human:
          type: string
          description: A human readable version of the release date
        m:
          type: integer
          format: int32
          description: The month as an integer starting at 1 (January)
        platform_version:
          $ref: "#/components/schemas/PlatformVersion/properties/id"
        region:
          $ref: "#/components/schemas/PlatformVersionReleaseDateRegionEnum"
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        y:
          type: integer
          format: int32
          description: The year in full (2018)
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    PlatformVersionReleaseDateEnums:
      type: integer
      format: int32
      enum: [0, 1, 2, 3, 4, 5, 6, 7]
      description: |
        An enum of the date format  
        0: YYYYMMMMDD  
        1: YYYYMMMM  
        2: YYYY  
        3: YYYYQ1  
        4: YYYYQ2  
        5: YYYYQ3  
        6: YYYYQ4  
        7: TBD  
    PlatformVersionReleaseDateRegionEnum:
      type: integer
      format: int32
      enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      description: |
        An enum of the region for the release date  
        1: europe  
        2: north_america  
        3: australia  
        4: new_zealand  
        5: japan  
        6: china  
        7: asia  
        8: worldwide  
        9: korea  
        10: brazil  
    PlatformWebsite:
      type: object
      description: The main website for the platform
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        category:
          $ref: "#/components/schemas/PlatformWebsiteCategoryEnums"
        trusted:
          type: boolean
        url:
          type: string
          format: url
          description: The main platform address (URL) of the platform
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    PlatformWebsiteCategoryEnums:
      type: integer
      format: int32
      enum: [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
      description: |
        The platform website  
        1: official  
        2: wikia  
        3: wikipedia  
        4: facebook  
        5: twitter  
        6: twitch  
        8: instagram  
        9: youtube  
        10: iphone  
        11: ipad  
        12: android  
        13: steam  
        14: reddit  
        15: discord  
        16: google_plus  
        17: tumblr  
        18: linkedin  
        19: pinterest  
        20: soundcloud  
    PlayerPerspective:
      type: object
      description: Player perspectives describe the view/perspective of the player in a video game.
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        name:
          type: string
          description: The perspective
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Region:
      type: object
      description: Region for game localization
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        name:
          type: string
          description: The name of the region
        category:
          format: string
          enum:
            - locale
            - continent
          description: Whether the region is a local or continent
        identifier:
          format: string
          description: This is the identifier of each region
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    ReleaseDate:
      type: object
      description: A handy endpoint that extends platform release dates. Used to dig deeper into release dates, platforms and versions.
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        category:
          $ref: "#/components/schemas/ReleaseDateCategoryEnums"
        created_at:
          type: number
          format: timestamp
          description: Date this was initially added to the IGDB database
        date:
          type: string
          format: timestamp
          description: The release date
        game:
          $ref: "#/components/schemas/Games/properties/id"
        human:
          type: string
          description: A human readable version of the release date
        m:
          type: integer
          format: int32
          description: The month as an integer starting at 1 (January)
        platform:
          $ref: "#/components/schemas/Platform/properties/id"
        region:
          $ref: "#/components/schemas/ReleaseDateRegionEnum"
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        y:
          type: integer
          format: int32
          description: The year in full (2018)
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    ReleaseDateCategoryEnums:
      type: integer
      format: int32
      enum: [0, 1, 2, 3, 4, 5, 6, 7]
      description: |
        An enum of the date format  
        0: YYYYMMMMDD  
        1: YYYYMMMM  
        2: YYYY  
        3: YYYYQ1  
        4: YYYYQ2  
        5: YYYYQ3  
        6: YYYYQ4  
        7: TBD  
    ReleaseDateRegionEnum:
      type: integer
      format: int32
      enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      description: |
        An enum of the region for the release date  
        1: europe  
        2: north_america  
        3: australia  
        4: new_zealand  
        5: japan  
        6: china  
        7: asia  
        8: worldwide  
        9: korea  
        10: brazil  
    ReleaseDateStatus:
      type: object
      description: An endpoint to provide definition of all of the current release date statuses.
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        name:
          type: string
          description: The name of the release date status
        description:
          type: string
          description: The description of the release date status.
        created_at:
          type: number
          format: date
          description: Date this was initially added to the IGDB database
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Screenshot:
      type: object
      description: Screenshots of games
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        alpha_channel:
          type: boolean
        animated:
          type: boolean
        game:
          $ref: "#/components/schemas/Games/properties/id"
        height:
          type: integer
          format: int32
          description: The height of the image in pixels
        image_id:
          type: string
          description: The ID of the image used to construct an IGDB image link
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        width:
          type: integer
          format: int32
          description: The width of the image in pixels
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Search:
      type: object
      description: Search IGDB and get the IDs of items matching your search
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        alternative_name:
          type: string
        character:
          $ref: "#/components/schemas/Character/properties/id"
        collection:
          $ref: "#/components/schemas/Collection/properties/id"
        company:
          $ref: "#/components/schemas/Company/properties/id"
        description:
          type: string
        game:
          $ref: "#/components/schemas/Games/properties/id"
        name:
          type: string
        platform:
          $ref: "#/components/schemas/Platform/properties/id"
        published_at:
          type: number
          format: timestamp
          description: The date this item was initally published by the third party
        test_dummy:
          type: number
          description: Reference ID for Test Dummy
        theme:
          $ref: "#/components/schemas/Theme/properties/id"
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Theme:
      type: object
      description: Video game themes
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        name:
          type: string
          description: The name of the theme
        slug:
          type: string
          description: A url-safe, unique, lower-case version of the name
        updated_at:
          type: number
          format: timestamp
          description: Date this was last updated in the IGDB database
        url:
          type: string
          format: url
          description: The website address (URL) of the item
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    Website:
      type: object
      description: A website URL, usually associated with a game
      properties:
        id:
          type: integer
          format: int32
          description: The IGDB object unique identifier
        category:
          $ref: "#/components/schemas/WebsiteCategoryEnums"
        game:
          $ref: "#/components/schemas/Games/properties/id"
        trusted:
          type: boolean
        url:
          type: string
          format: url
          description: The main platform address (URL) of the platform
        checksum:
          type: string
          format: uuid
          description: Hash of the object
    WebsiteCategoryEnums:
      type: integer
      format: int32
      enum: [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
      description: |
        The platform website  
        1: official  
        2: wikia  
        3: wikipedia  
        4: facebook  
        5: twitter  
        6: twitch  
        8: instagram  
        9: youtube  
        10: iphone  
        11: ipad  
        12: android  
        13: steam  
        14: reddit  
        15: itch  
        16: epicgames  
        17: gog  
        18: discord  
  securitySchemes:
    TwitchOAuth:
      type: oauth2
      description: Retrieve/Refresh your Authorization Token from the Twitch OAuth service
      x-receive-token-in: request-body
      flows:
        clientCredentials:
          tokenUrl: https://id.twitch.tv/oauth2/token
          refreshUrl: https://id.twitch.tv/oauth2/token
          scopes: {}
    Client-ID:
      type: apiKey
      name: Client-ID
      in: header
tags:
  - name: Endpoints
